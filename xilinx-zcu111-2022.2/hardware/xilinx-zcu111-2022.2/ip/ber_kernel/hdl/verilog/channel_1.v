// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module channel_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        snr_V,
        src_data_V_M_real_V_dout,
        src_data_V_M_real_V_empty_n,
        src_data_V_M_real_V_read,
        src_data_V_M_imag_V_dout,
        src_data_V_M_imag_V_empty_n,
        src_data_V_M_imag_V_read,
        src_data_last_V_dout,
        src_data_last_V_empty_n,
        src_data_last_V_read,
        err_data_V_M_real_V_din,
        err_data_V_M_real_V_full_n,
        err_data_V_M_real_V_write,
        err_data_V_M_imag_V_din,
        err_data_V_M_imag_V_full_n,
        err_data_V_M_imag_V_write,
        err_data_last_V_din,
        err_data_last_V_full_n,
        err_data_last_V_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state29 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [16:0] snr_V;
input  [15:0] src_data_V_M_real_V_dout;
input   src_data_V_M_real_V_empty_n;
output   src_data_V_M_real_V_read;
input  [15:0] src_data_V_M_imag_V_dout;
input   src_data_V_M_imag_V_empty_n;
output   src_data_V_M_imag_V_read;
input   src_data_last_V_dout;
input   src_data_last_V_empty_n;
output   src_data_last_V_read;
output  [18:0] err_data_V_M_real_V_din;
input   err_data_V_M_real_V_full_n;
output   err_data_V_M_real_V_write;
output  [18:0] err_data_V_M_imag_V_din;
input   err_data_V_M_imag_V_full_n;
output   err_data_V_M_imag_V_write;
output   err_data_last_V_din;
input   err_data_last_V_full_n;
output   err_data_last_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_last_V_read;
reg err_data_last_V_din;
reg err_data_last_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_data_V_M_real_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    src_data_V_M_imag_V_blk_n;
reg    src_data_last_V_blk_n;
reg    err_data_V_M_real_V_blk_n;
reg    ap_enable_reg_pp0_iter23;
reg    err_data_V_M_imag_V_blk_n;
reg    err_data_last_V_blk_n;
reg   [0:0] tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter22_tmp_31_reg_599;
wire   [0:0] tmp_fu_245_p2;
reg   [0:0] tmp_reg_519;
wire   [1:0] sh_assign_fu_267_p3;
reg   [1:0] sh_assign_reg_525;
wire   [16:0] snr_mod_V_fu_306_p2;
reg   [16:0] snr_mod_V_reg_530;
wire    ap_CS_fsm_state2;
reg   [0:0] signbit_reg_535;
reg   [7:0] p_Val2_11_reg_542;
reg   [0:0] tmp_27_reg_547;
reg   [1:0] p_Result_3_reg_552;
wire   [7:0] p_Val2_12_fu_357_p2;
reg   [7:0] p_Val2_12_reg_558;
wire    ap_CS_fsm_state3;
wire   [0:0] carry_fu_376_p2;
reg   [0:0] carry_reg_564;
wire   [0:0] Range1_all_ones_fu_382_p2;
reg   [0:0] Range1_all_ones_reg_570;
wire   [0:0] Range1_all_zeros_fu_387_p2;
reg   [0:0] Range1_all_zeros_reg_576;
wire   [17:0] sh_assign_cast_fu_392_p1;
reg   [17:0] sh_assign_cast_reg_581;
wire    ap_CS_fsm_state4;
wire   [7:0] awgn_snr_V_fu_463_p3;
reg   [7:0] awgn_snr_V_reg_587;
reg   [15:0] empty_reg_593_0;
reg   [15:0] empty_reg_593_1;
wire    src_data_V_M_real_V0_status;
reg    ap_block_state5;
wire    err_data_V_M_real_V1_status;
reg    ap_block_state28;
reg   [15:0] ap_reg_pp0_iter1_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter1_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter2_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter2_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter3_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter3_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter4_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter4_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter5_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter5_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter6_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter6_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter7_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter7_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter8_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter8_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter9_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter9_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter10_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter10_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter11_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter11_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter12_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter12_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter13_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter13_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter14_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter14_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter15_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter15_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter16_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter16_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter17_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter17_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter18_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter18_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter19_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter19_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter20_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter20_empty_reg_593_1;
reg   [15:0] ap_reg_pp0_iter21_empty_reg_593_0;
reg   [15:0] ap_reg_pp0_iter21_empty_reg_593_1;
wire   [0:0] tmp_31_read_fu_194_p2;
reg   [0:0] ap_reg_pp0_iter1_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter2_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter3_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter4_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter5_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter6_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter7_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter8_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter9_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter10_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter11_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter12_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter13_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter14_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter15_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter16_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter17_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter18_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter19_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter20_tmp_31_reg_599;
reg   [0:0] ap_reg_pp0_iter21_tmp_31_reg_599;
wire   [17:0] grp_awgn_real_fu_219_ap_return;
reg   [17:0] awgn_sample_real_V_reg_603;
reg    ap_enable_reg_pp0_iter21;
wire   [17:0] grp_awgn_imag_fu_232_ap_return;
reg   [17:0] awgn_sample_imag_V_reg_608;
wire   [18:0] err_sample_real_V_fu_493_p2;
reg   [18:0] err_sample_real_V_reg_613;
reg    ap_enable_reg_pp0_iter22;
wire   [18:0] err_sample_imag_V_fu_507_p2;
reg   [18:0] err_sample_imag_V_reg_618;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
wire    grp_awgn_real_fu_219_ap_start;
wire    grp_awgn_real_fu_219_ap_done;
wire    grp_awgn_real_fu_219_ap_idle;
wire    grp_awgn_real_fu_219_ap_ready;
reg    grp_awgn_real_fu_219_ap_ce;
reg    ap_block_state28_ignore_call6;
wire    grp_awgn_imag_fu_232_ap_start;
wire    grp_awgn_imag_fu_232_ap_done;
wire    grp_awgn_imag_fu_232_ap_idle;
wire    grp_awgn_imag_fu_232_ap_ready;
reg    grp_awgn_imag_fu_232_ap_ce;
reg    ap_block_state28_ignore_call7;
reg    ap_reg_grp_awgn_real_fu_219_ap_start;
reg    ap_reg_grp_awgn_imag_fu_232_ap_start;
reg    src_data_V_M_real_V0_update;
reg    err_data_V_M_real_V1_update;
wire   [0:0] tmp_24_fu_251_p3;
wire   [1:0] p_2_cast_fu_259_p3;
wire   [0:0] tmp_25_fu_275_p3;
wire   [0:0] tmp_4_fu_289_p2;
wire   [15:0] tmp_49_cast_cast_fu_282_p3;
wire   [15:0] p_Val2_s_fu_294_p3;
wire  signed [16:0] p_Val2_cast_fu_302_p1;
wire   [7:0] tmp_7_fu_347_p1;
wire   [0:0] tmp_29_fu_362_p3;
wire   [0:0] tmp_28_fu_350_p3;
wire   [0:0] tmp_8_fu_370_p2;
wire   [0:0] p_38_i_fu_400_p2;
wire   [0:0] tmp_9_fu_404_p2;
wire   [0:0] deleted_zeros_fu_395_p3;
wire   [0:0] signbit_not_fu_420_p2;
wire   [0:0] p_39_demorgan_i_fu_415_p2;
wire   [0:0] neg_src_not_fu_425_p2;
wire   [0:0] p_39_demorgan_i_not_fu_437_p2;
wire   [0:0] brmerge_i_i_not_fu_431_p2;
wire   [0:0] neg_src_fu_410_p2;
wire   [0:0] brmerge_fu_443_p2;
wire   [7:0] p_mux_fu_449_p3;
wire   [7:0] p_s_fu_456_p3;
wire   [17:0] p_Val2_15_fu_477_p2;
wire  signed [18:0] tmp_3_fu_489_p1;
wire  signed [18:0] tmp_2_fu_485_p1;
wire   [17:0] p_Val2_16_fu_481_p2;
wire  signed [18:0] tmp_s_fu_503_p1;
wire  signed [18:0] tmp_6_fu_499_p1;
wire    ap_CS_fsm_state29;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_468;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_reg_grp_awgn_real_fu_219_ap_start = 1'b0;
#0 ap_reg_grp_awgn_imag_fu_232_ap_start = 1'b0;
end

awgn_real grp_awgn_real_fu_219(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_awgn_real_fu_219_ap_start),
    .ap_done(grp_awgn_real_fu_219_ap_done),
    .ap_idle(grp_awgn_real_fu_219_ap_idle),
    .ap_ready(grp_awgn_real_fu_219_ap_ready),
    .ap_ce(grp_awgn_real_fu_219_ap_ce),
    .snr_V(awgn_snr_V_reg_587),
    .ap_return(grp_awgn_real_fu_219_ap_return)
);

awgn_imag grp_awgn_imag_fu_232(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_awgn_imag_fu_232_ap_start),
    .ap_done(grp_awgn_imag_fu_232_ap_done),
    .ap_idle(grp_awgn_imag_fu_232_ap_idle),
    .ap_ready(grp_awgn_imag_fu_232_ap_ready),
    .ap_ce(grp_awgn_imag_fu_232_ap_ce),
    .snr_V(awgn_snr_V_reg_587),
    .ap_return(grp_awgn_imag_fu_232_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) & (1'd1 == tmp_31_read_fu_194_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end else if ((1'b1 == ap_CS_fsm_state4)) begin
            ap_enable_reg_pp0_iter23 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_awgn_imag_fu_232_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
            ap_reg_grp_awgn_imag_fu_232_ap_start <= 1'b1;
        end else if ((1'b1 == grp_awgn_imag_fu_232_ap_ready)) begin
            ap_reg_grp_awgn_imag_fu_232_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_awgn_real_fu_219_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
            ap_reg_grp_awgn_real_fu_219_ap_start <= 1'b1;
        end else if ((1'b1 == grp_awgn_real_fu_219_ap_ready)) begin
            ap_reg_grp_awgn_real_fu_219_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Range1_all_ones_reg_570 <= Range1_all_ones_fu_382_p2;
        Range1_all_zeros_reg_576 <= Range1_all_zeros_fu_387_p2;
        carry_reg_564 <= carry_fu_376_p2;
        p_Val2_12_reg_558 <= p_Val2_12_fu_357_p2;
    end
end

always @ (posedge ap_clk) begin
    if (~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) begin
        ap_reg_pp0_iter10_empty_reg_593_0 <= ap_reg_pp0_iter9_empty_reg_593_0;
        ap_reg_pp0_iter10_empty_reg_593_1 <= ap_reg_pp0_iter9_empty_reg_593_1;
        ap_reg_pp0_iter10_tmp_31_reg_599 <= ap_reg_pp0_iter9_tmp_31_reg_599;
        ap_reg_pp0_iter11_empty_reg_593_0 <= ap_reg_pp0_iter10_empty_reg_593_0;
        ap_reg_pp0_iter11_empty_reg_593_1 <= ap_reg_pp0_iter10_empty_reg_593_1;
        ap_reg_pp0_iter11_tmp_31_reg_599 <= ap_reg_pp0_iter10_tmp_31_reg_599;
        ap_reg_pp0_iter12_empty_reg_593_0 <= ap_reg_pp0_iter11_empty_reg_593_0;
        ap_reg_pp0_iter12_empty_reg_593_1 <= ap_reg_pp0_iter11_empty_reg_593_1;
        ap_reg_pp0_iter12_tmp_31_reg_599 <= ap_reg_pp0_iter11_tmp_31_reg_599;
        ap_reg_pp0_iter13_empty_reg_593_0 <= ap_reg_pp0_iter12_empty_reg_593_0;
        ap_reg_pp0_iter13_empty_reg_593_1 <= ap_reg_pp0_iter12_empty_reg_593_1;
        ap_reg_pp0_iter13_tmp_31_reg_599 <= ap_reg_pp0_iter12_tmp_31_reg_599;
        ap_reg_pp0_iter14_empty_reg_593_0 <= ap_reg_pp0_iter13_empty_reg_593_0;
        ap_reg_pp0_iter14_empty_reg_593_1 <= ap_reg_pp0_iter13_empty_reg_593_1;
        ap_reg_pp0_iter14_tmp_31_reg_599 <= ap_reg_pp0_iter13_tmp_31_reg_599;
        ap_reg_pp0_iter15_empty_reg_593_0 <= ap_reg_pp0_iter14_empty_reg_593_0;
        ap_reg_pp0_iter15_empty_reg_593_1 <= ap_reg_pp0_iter14_empty_reg_593_1;
        ap_reg_pp0_iter15_tmp_31_reg_599 <= ap_reg_pp0_iter14_tmp_31_reg_599;
        ap_reg_pp0_iter16_empty_reg_593_0 <= ap_reg_pp0_iter15_empty_reg_593_0;
        ap_reg_pp0_iter16_empty_reg_593_1 <= ap_reg_pp0_iter15_empty_reg_593_1;
        ap_reg_pp0_iter16_tmp_31_reg_599 <= ap_reg_pp0_iter15_tmp_31_reg_599;
        ap_reg_pp0_iter17_empty_reg_593_0 <= ap_reg_pp0_iter16_empty_reg_593_0;
        ap_reg_pp0_iter17_empty_reg_593_1 <= ap_reg_pp0_iter16_empty_reg_593_1;
        ap_reg_pp0_iter17_tmp_31_reg_599 <= ap_reg_pp0_iter16_tmp_31_reg_599;
        ap_reg_pp0_iter18_empty_reg_593_0 <= ap_reg_pp0_iter17_empty_reg_593_0;
        ap_reg_pp0_iter18_empty_reg_593_1 <= ap_reg_pp0_iter17_empty_reg_593_1;
        ap_reg_pp0_iter18_tmp_31_reg_599 <= ap_reg_pp0_iter17_tmp_31_reg_599;
        ap_reg_pp0_iter19_empty_reg_593_0 <= ap_reg_pp0_iter18_empty_reg_593_0;
        ap_reg_pp0_iter19_empty_reg_593_1 <= ap_reg_pp0_iter18_empty_reg_593_1;
        ap_reg_pp0_iter19_tmp_31_reg_599 <= ap_reg_pp0_iter18_tmp_31_reg_599;
        ap_reg_pp0_iter20_empty_reg_593_0 <= ap_reg_pp0_iter19_empty_reg_593_0;
        ap_reg_pp0_iter20_empty_reg_593_1 <= ap_reg_pp0_iter19_empty_reg_593_1;
        ap_reg_pp0_iter20_tmp_31_reg_599 <= ap_reg_pp0_iter19_tmp_31_reg_599;
        ap_reg_pp0_iter21_empty_reg_593_0 <= ap_reg_pp0_iter20_empty_reg_593_0;
        ap_reg_pp0_iter21_empty_reg_593_1 <= ap_reg_pp0_iter20_empty_reg_593_1;
        ap_reg_pp0_iter21_tmp_31_reg_599 <= ap_reg_pp0_iter20_tmp_31_reg_599;
        ap_reg_pp0_iter22_tmp_31_reg_599 <= ap_reg_pp0_iter21_tmp_31_reg_599;
        ap_reg_pp0_iter2_empty_reg_593_0 <= ap_reg_pp0_iter1_empty_reg_593_0;
        ap_reg_pp0_iter2_empty_reg_593_1 <= ap_reg_pp0_iter1_empty_reg_593_1;
        ap_reg_pp0_iter2_tmp_31_reg_599 <= ap_reg_pp0_iter1_tmp_31_reg_599;
        ap_reg_pp0_iter3_empty_reg_593_0 <= ap_reg_pp0_iter2_empty_reg_593_0;
        ap_reg_pp0_iter3_empty_reg_593_1 <= ap_reg_pp0_iter2_empty_reg_593_1;
        ap_reg_pp0_iter3_tmp_31_reg_599 <= ap_reg_pp0_iter2_tmp_31_reg_599;
        ap_reg_pp0_iter4_empty_reg_593_0 <= ap_reg_pp0_iter3_empty_reg_593_0;
        ap_reg_pp0_iter4_empty_reg_593_1 <= ap_reg_pp0_iter3_empty_reg_593_1;
        ap_reg_pp0_iter4_tmp_31_reg_599 <= ap_reg_pp0_iter3_tmp_31_reg_599;
        ap_reg_pp0_iter5_empty_reg_593_0 <= ap_reg_pp0_iter4_empty_reg_593_0;
        ap_reg_pp0_iter5_empty_reg_593_1 <= ap_reg_pp0_iter4_empty_reg_593_1;
        ap_reg_pp0_iter5_tmp_31_reg_599 <= ap_reg_pp0_iter4_tmp_31_reg_599;
        ap_reg_pp0_iter6_empty_reg_593_0 <= ap_reg_pp0_iter5_empty_reg_593_0;
        ap_reg_pp0_iter6_empty_reg_593_1 <= ap_reg_pp0_iter5_empty_reg_593_1;
        ap_reg_pp0_iter6_tmp_31_reg_599 <= ap_reg_pp0_iter5_tmp_31_reg_599;
        ap_reg_pp0_iter7_empty_reg_593_0 <= ap_reg_pp0_iter6_empty_reg_593_0;
        ap_reg_pp0_iter7_empty_reg_593_1 <= ap_reg_pp0_iter6_empty_reg_593_1;
        ap_reg_pp0_iter7_tmp_31_reg_599 <= ap_reg_pp0_iter6_tmp_31_reg_599;
        ap_reg_pp0_iter8_empty_reg_593_0 <= ap_reg_pp0_iter7_empty_reg_593_0;
        ap_reg_pp0_iter8_empty_reg_593_1 <= ap_reg_pp0_iter7_empty_reg_593_1;
        ap_reg_pp0_iter8_tmp_31_reg_599 <= ap_reg_pp0_iter7_tmp_31_reg_599;
        ap_reg_pp0_iter9_empty_reg_593_0 <= ap_reg_pp0_iter8_empty_reg_593_0;
        ap_reg_pp0_iter9_empty_reg_593_1 <= ap_reg_pp0_iter8_empty_reg_593_1;
        ap_reg_pp0_iter9_tmp_31_reg_599 <= ap_reg_pp0_iter8_tmp_31_reg_599;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)))) begin
        ap_reg_pp0_iter1_empty_reg_593_0 <= empty_reg_593_0;
        ap_reg_pp0_iter1_empty_reg_593_1 <= empty_reg_593_1;
        ap_reg_pp0_iter1_tmp_31_reg_599 <= tmp_31_reg_599;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)) & (1'b1 == ap_enable_reg_pp0_iter21))) begin
        awgn_sample_imag_V_reg_608 <= grp_awgn_imag_fu_232_ap_return;
        awgn_sample_real_V_reg_603 <= grp_awgn_real_fu_219_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        awgn_snr_V_reg_587 <= awgn_snr_V_fu_463_p3;
        sh_assign_cast_reg_581[1 : 0] <= sh_assign_cast_fu_392_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
        empty_reg_593_0 <= src_data_V_M_real_V_dout;
        empty_reg_593_1 <= src_data_V_M_imag_V_dout;
        tmp_31_reg_599 <= src_data_last_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)) & (1'b1 == ap_enable_reg_pp0_iter22))) begin
        err_sample_imag_V_reg_618 <= err_sample_imag_V_fu_507_p2;
        err_sample_real_V_reg_613 <= err_sample_real_V_fu_493_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Result_3_reg_552 <= {{snr_mod_V_fu_306_p2[16:15]}};
        p_Val2_11_reg_542 <= {{snr_mod_V_fu_306_p2[14:7]}};
        signbit_reg_535 <= snr_mod_V_fu_306_p2[32'd16];
        snr_mod_V_reg_530 <= snr_mod_V_fu_306_p2;
        tmp_27_reg_547 <= snr_mod_V_fu_306_p2[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        sh_assign_reg_525 <= sh_assign_fu_267_p3;
        tmp_reg_519 <= tmp_fu_245_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1)) | (1'b1 == ap_CS_fsm_state29))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_enable_reg_pp0_iter0) & (1'b0 == ap_enable_reg_pp0_iter1) & (1'b0 == ap_enable_reg_pp0_iter2) & (1'b0 == ap_enable_reg_pp0_iter3) & (1'b0 == ap_enable_reg_pp0_iter4) & (1'b0 == ap_enable_reg_pp0_iter5) & (1'b0 == ap_enable_reg_pp0_iter6) & (1'b0 == ap_enable_reg_pp0_iter7) & (1'b0 == ap_enable_reg_pp0_iter8) & (1'b0 == ap_enable_reg_pp0_iter9) & (1'b0 == ap_enable_reg_pp0_iter10) & (1'b0 == ap_enable_reg_pp0_iter11) & (1'b0 == ap_enable_reg_pp0_iter12) & (1'b0 == ap_enable_reg_pp0_iter13) & (1'b0 == ap_enable_reg_pp0_iter14) & (1'b0 == ap_enable_reg_pp0_iter15) & (1'b0 == ap_enable_reg_pp0_iter16) & (1'b0 == ap_enable_reg_pp0_iter17) & (1'b0 == ap_enable_reg_pp0_iter18) & (1'b0 == ap_enable_reg_pp0_iter19) & (1'b0 == ap_enable_reg_pp0_iter20) & (1'b0 == ap_enable_reg_pp0_iter21) & (1'b0 == ap_enable_reg_pp0_iter22) & (1'b0 == ap_enable_reg_pp0_iter23))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter23)) begin
        err_data_V_M_imag_V_blk_n = err_data_V_M_imag_V_full_n;
    end else begin
        err_data_V_M_imag_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter23) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)))) begin
        err_data_V_M_real_V1_update = 1'b1;
    end else begin
        err_data_V_M_real_V1_update = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter23)) begin
        err_data_V_M_real_V_blk_n = err_data_V_M_real_V_full_n;
    end else begin
        err_data_V_M_real_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter23) & (ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd1)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd0)))) begin
        err_data_last_V_blk_n = err_data_last_V_full_n;
    end else begin
        err_data_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((ap_condition_468 == 1'b1)) begin
        if ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd1)) begin
            err_data_last_V_din = 1'd1;
        end else if ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd0)) begin
            err_data_last_V_din = 1'd0;
        end else begin
            err_data_last_V_din = 'bx;
        end
    end else begin
        err_data_last_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp0_iter23) & (ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd0) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))) | ((1'b1 == ap_enable_reg_pp0_iter23) & (ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd1) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
        err_data_last_V_write = 1'b1;
    end else begin
        err_data_last_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28_ignore_call7)))) begin
        grp_awgn_imag_fu_232_ap_ce = 1'b1;
    end else begin
        grp_awgn_imag_fu_232_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28_ignore_call6)))) begin
        grp_awgn_real_fu_219_ap_ce = 1'b1;
    end else begin
        grp_awgn_real_fu_219_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        src_data_V_M_imag_V_blk_n = src_data_V_M_imag_V_empty_n;
    end else begin
        src_data_V_M_imag_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
        src_data_V_M_real_V0_update = 1'b1;
    end else begin
        src_data_V_M_real_V0_update = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        src_data_V_M_real_V_blk_n = src_data_V_M_real_V_empty_n;
    end else begin
        src_data_V_M_real_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        src_data_last_V_blk_n = src_data_last_V_empty_n;
    end else begin
        src_data_last_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & ~(((1'b1 == ap_enable_reg_pp0_iter0) & (1'b1 == ap_block_state5)) | ((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28))))) begin
        src_data_last_V_read = 1'b1;
    end else begin
        src_data_last_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((ap_start == 1'b1)) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b1 == ap_enable_reg_pp0_iter23) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)) & (ap_enable_reg_pp0_iter22 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b1 == ap_enable_reg_pp0_iter23) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)) & (ap_enable_reg_pp0_iter22 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_fu_382_p2 = ((p_Result_3_reg_552 == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_387_p2 = ((p_Result_3_reg_552 == 2'd0) ? 1'b1 : 1'b0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state28 = ((1'b0 == err_data_V_M_real_V1_status) | ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd0) & (1'b0 == err_data_last_V_full_n)) | ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd1) & (1'b0 == err_data_last_V_full_n)));
end

always @ (*) begin
    ap_block_state28_ignore_call6 = ((1'b0 == err_data_V_M_real_V1_status) | ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd0) & (1'b0 == err_data_last_V_full_n)) | ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd1) & (1'b0 == err_data_last_V_full_n)));
end

always @ (*) begin
    ap_block_state28_ignore_call7 = ((1'b0 == err_data_V_M_real_V1_status) | ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd0) & (1'b0 == err_data_last_V_full_n)) | ((ap_reg_pp0_iter22_tmp_31_reg_599 == 1'd1) & (1'b0 == err_data_last_V_full_n)));
end

always @ (*) begin
    ap_block_state5 = ((1'b0 == src_data_V_M_real_V0_status) | (1'b0 == src_data_last_V_empty_n));
end

always @ (*) begin
    ap_condition_468 = ((1'b1 == ap_enable_reg_pp0_iter23) & ~((1'b1 == ap_enable_reg_pp0_iter23) & (1'b1 == ap_block_state28)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign awgn_snr_V_fu_463_p3 = ((brmerge_fu_443_p2[0:0] === 1'b1) ? p_mux_fu_449_p3 : p_s_fu_456_p3);

assign brmerge_fu_443_p2 = (neg_src_not_fu_425_p2 | p_39_demorgan_i_not_fu_437_p2);

assign brmerge_i_i_not_fu_431_p2 = (p_39_demorgan_i_fu_415_p2 & neg_src_not_fu_425_p2);

assign carry_fu_376_p2 = (tmp_28_fu_350_p3 & tmp_8_fu_370_p2);

assign deleted_zeros_fu_395_p3 = ((carry_reg_564[0:0] === 1'b1) ? Range1_all_ones_reg_570 : Range1_all_zeros_reg_576);

assign err_data_V_M_imag_V_din = err_sample_imag_V_reg_618;

assign err_data_V_M_imag_V_write = err_data_V_M_real_V1_update;

assign err_data_V_M_real_V1_status = (err_data_V_M_real_V_full_n & err_data_V_M_imag_V_full_n);

assign err_data_V_M_real_V_din = err_sample_real_V_reg_613;

assign err_data_V_M_real_V_write = err_data_V_M_real_V1_update;

assign err_sample_imag_V_fu_507_p2 = ($signed(tmp_s_fu_503_p1) + $signed(tmp_6_fu_499_p1));

assign err_sample_real_V_fu_493_p2 = ($signed(tmp_3_fu_489_p1) + $signed(tmp_2_fu_485_p1));

assign grp_awgn_imag_fu_232_ap_start = ap_reg_grp_awgn_imag_fu_232_ap_start;

assign grp_awgn_real_fu_219_ap_start = ap_reg_grp_awgn_real_fu_219_ap_start;

assign neg_src_fu_410_p2 = (signbit_reg_535 & tmp_9_fu_404_p2);

assign neg_src_not_fu_425_p2 = (p_38_i_fu_400_p2 | signbit_not_fu_420_p2);

assign p_2_cast_fu_259_p3 = ((tmp_fu_245_p2[0:0] === 1'b1) ? 2'd0 : 2'd1);

assign p_38_i_fu_400_p2 = (carry_reg_564 & Range1_all_ones_reg_570);

assign p_39_demorgan_i_fu_415_p2 = (deleted_zeros_fu_395_p3 | signbit_reg_535);

assign p_39_demorgan_i_not_fu_437_p2 = (p_39_demorgan_i_fu_415_p2 ^ 1'd1);

assign p_Val2_12_fu_357_p2 = (p_Val2_11_reg_542 + tmp_7_fu_347_p1);

assign p_Val2_15_fu_477_p2 = $signed(awgn_sample_real_V_reg_603) >>> sh_assign_cast_reg_581;

assign p_Val2_16_fu_481_p2 = $signed(awgn_sample_imag_V_reg_608) >>> sh_assign_cast_reg_581;

assign p_Val2_cast_fu_302_p1 = $signed(p_Val2_s_fu_294_p3);

assign p_Val2_s_fu_294_p3 = ((tmp_4_fu_289_p2[0:0] === 1'b1) ? tmp_49_cast_cast_fu_282_p3 : 16'd0);

assign p_mux_fu_449_p3 = ((brmerge_i_i_not_fu_431_p2[0:0] === 1'b1) ? p_Val2_12_reg_558 : 8'd255);

assign p_s_fu_456_p3 = ((neg_src_fu_410_p2[0:0] === 1'b1) ? 8'd0 : p_Val2_12_reg_558);

assign sh_assign_cast_fu_392_p1 = sh_assign_reg_525;

assign sh_assign_fu_267_p3 = ((tmp_24_fu_251_p3[0:0] === 1'b1) ? p_2_cast_fu_259_p3 : 2'd2);

assign signbit_not_fu_420_p2 = (signbit_reg_535 ^ 1'd1);

assign snr_mod_V_fu_306_p2 = ($signed(snr_V) - $signed(p_Val2_cast_fu_302_p1));

assign src_data_V_M_imag_V_read = src_data_V_M_real_V0_update;

assign src_data_V_M_real_V0_status = (src_data_V_M_real_V_empty_n & src_data_V_M_imag_V_empty_n);

assign src_data_V_M_real_V_read = src_data_V_M_real_V0_update;

assign tmp_24_fu_251_p3 = snr_V[32'd16];

assign tmp_25_fu_275_p3 = snr_V[32'd16];

assign tmp_28_fu_350_p3 = snr_mod_V_reg_530[32'd14];

assign tmp_29_fu_362_p3 = p_Val2_12_fu_357_p2[32'd7];

assign tmp_2_fu_485_p1 = $signed(ap_reg_pp0_iter21_empty_reg_593_0);

assign tmp_31_read_fu_194_p2 = src_data_last_V_dout;

assign tmp_3_fu_489_p1 = $signed(p_Val2_15_fu_477_p2);

assign tmp_49_cast_cast_fu_282_p3 = ((tmp_reg_519[0:0] === 1'b1) ? 16'd40875 : 16'd53205);

assign tmp_4_fu_289_p2 = (tmp_reg_519 | tmp_25_fu_275_p3);

assign tmp_6_fu_499_p1 = $signed(ap_reg_pp0_iter21_empty_reg_593_1);

assign tmp_7_fu_347_p1 = tmp_27_reg_547;

assign tmp_8_fu_370_p2 = (tmp_29_fu_362_p3 ^ 1'd1);

assign tmp_9_fu_404_p2 = (p_38_i_fu_400_p2 ^ 1'd1);

assign tmp_fu_245_p2 = (($signed(snr_V) < $signed(17'd118741)) ? 1'b1 : 1'b0);

assign tmp_s_fu_503_p1 = $signed(p_Val2_16_fu_481_p2);

always @ (posedge ap_clk) begin
    sh_assign_cast_reg_581[17:2] <= 16'b0000000000000000;
end

endmodule //channel_1
