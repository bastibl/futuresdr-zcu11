// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

// CNTRL
// 0x000 : Control signals
//         bit 0  - ap_start (Read/Write/COH)
//         bit 1  - ap_done (Read/COR)
//         bit 2  - ap_idle (Read)
//         bit 3  - ap_ready (Read)
//         bit 7  - auto_restart (Read/Write)
//         others - reserved
// 0x004 : Global Interrupt Enable Register
//         bit 0  - Global Interrupt Enable (Read/Write)
//         others - reserved
// 0x008 : IP Interrupt Enable Register (Read/Write)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x00c : IP Interrupt Status Register (Read/TOW)
//         bit 0  - Channel 0 (ap_done)
//         bit 1  - Channel 1 (ap_ready)
//         others - reserved
// 0x600 : Data signal of fec_type
//         bit 31~0 - fec_type[31:0] (Read/Write)
// 0x604 : reserved
// 0x608 : Data signal of soft_words_tx
//         bit 31~0 - soft_words_tx[31:0] (Read/Write)
// 0x60c : reserved
// 0x610 : Data signal of hard_words_tx
//         bit 31~0 - hard_words_tx[31:0] (Read/Write)
// 0x614 : reserved
// 0x900 : Data signal of num_defs
//         bit 31~0 - num_defs[31:0] (Read/Write)
// 0x904 : reserved
// 0x908 : Data signal of num_blocks
//         bit 31~0 - num_blocks[31:0] (Read/Write)
// 0x90c : reserved
// 0x080 ~
// 0x0ff : Memory 'block_cfg_code' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_code[n]
// 0x100 ~
// 0x17f : Memory 'block_cfg_n' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_n[n]
// 0x180 ~
// 0x1ff : Memory 'block_cfg_k' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_k[n]
// 0x200 ~
// 0x27f : Memory 'block_cfg_term_on_pass' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_term_on_pass[n]
// 0x280 ~
// 0x2ff : Memory 'block_cfg_max_iterations' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_max_iterations[n]
// 0x300 ~
// 0x37f : Memory 'block_cfg_crc_type' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_crc_type[n]
// 0x380 ~
// 0x3ff : Memory 'block_cfg_skip_channel' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_skip_channel[n]
// 0x400 ~
// 0x47f : Memory 'block_cfg_mod_type' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_mod_type[n]
// 0x480 ~
// 0x4ff : Memory 'block_cfg_snr_V' (32 * 17b)
//         Word n : bit [16:0] - block_cfg_snr_V[n]
//                  others     - reserved
// 0x500 ~
// 0x57f : Memory 'block_cfg_inv_sigma_sq_V' (32 * 17b)
//         Word n : bit [16:0] - block_cfg_inv_sigma_sq_V[n]
//                  others     - reserved
// 0x580 ~
// 0x5ff : Memory 'block_cfg_outputs' (32 * 32b)
//         Word n : bit [31:0] - block_cfg_outputs[n]
// 0x700 ~
// 0x7ff : Memory 'block_def_cfg' (64 * 32b)
//         Word n : bit [31:0] - block_def_cfg[n]
// 0x800 ~
// 0x8ff : Memory 'block_def_cnt' (64 * 32b)
//         Word n : bit [31:0] - block_def_cnt[n]
// (SC = Self Clear, COR = Clear on Read, TOW = Toggle on Write, COH = Clear on Handshake)

#define XBER_KERNEL_CNTRL_ADDR_AP_CTRL                       0x000
#define XBER_KERNEL_CNTRL_ADDR_GIE                           0x004
#define XBER_KERNEL_CNTRL_ADDR_IER                           0x008
#define XBER_KERNEL_CNTRL_ADDR_ISR                           0x00c
#define XBER_KERNEL_CNTRL_ADDR_FEC_TYPE_DATA                 0x600
#define XBER_KERNEL_CNTRL_BITS_FEC_TYPE_DATA                 32
#define XBER_KERNEL_CNTRL_ADDR_SOFT_WORDS_TX_DATA            0x608
#define XBER_KERNEL_CNTRL_BITS_SOFT_WORDS_TX_DATA            32
#define XBER_KERNEL_CNTRL_ADDR_HARD_WORDS_TX_DATA            0x610
#define XBER_KERNEL_CNTRL_BITS_HARD_WORDS_TX_DATA            32
#define XBER_KERNEL_CNTRL_ADDR_NUM_DEFS_DATA                 0x900
#define XBER_KERNEL_CNTRL_BITS_NUM_DEFS_DATA                 32
#define XBER_KERNEL_CNTRL_ADDR_NUM_BLOCKS_DATA               0x908
#define XBER_KERNEL_CNTRL_BITS_NUM_BLOCKS_DATA               32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_CODE_BASE           0x080
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_CODE_HIGH           0x0ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_CODE               32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_CODE               32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_N_BASE              0x100
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_N_HIGH              0x17f
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_N                  32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_N                  32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_K_BASE              0x180
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_K_HIGH              0x1ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_K                  32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_K                  32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_TERM_ON_PASS_BASE   0x200
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_TERM_ON_PASS_HIGH   0x27f
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_TERM_ON_PASS       32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_TERM_ON_PASS       32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_MAX_ITERATIONS_BASE 0x280
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_MAX_ITERATIONS_HIGH 0x2ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_MAX_ITERATIONS     32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_MAX_ITERATIONS     32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_CRC_TYPE_BASE       0x300
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_CRC_TYPE_HIGH       0x37f
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_CRC_TYPE           32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_CRC_TYPE           32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_SKIP_CHANNEL_BASE   0x380
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_SKIP_CHANNEL_HIGH   0x3ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_SKIP_CHANNEL       32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_SKIP_CHANNEL       32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_MOD_TYPE_BASE       0x400
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_MOD_TYPE_HIGH       0x47f
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_MOD_TYPE           32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_MOD_TYPE           32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_SNR_V_BASE          0x480
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_SNR_V_HIGH          0x4ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_SNR_V              17
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_SNR_V              32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_INV_SIGMA_SQ_V_BASE 0x500
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_INV_SIGMA_SQ_V_HIGH 0x57f
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_INV_SIGMA_SQ_V     17
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_INV_SIGMA_SQ_V     32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_OUTPUTS_BASE        0x580
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_CFG_OUTPUTS_HIGH        0x5ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_CFG_OUTPUTS            32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_CFG_OUTPUTS            32
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_DEF_CFG_BASE            0x700
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_DEF_CFG_HIGH            0x7ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_DEF_CFG                32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_DEF_CFG                64
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_DEF_CNT_BASE            0x800
#define XBER_KERNEL_CNTRL_ADDR_BLOCK_DEF_CNT_HIGH            0x8ff
#define XBER_KERNEL_CNTRL_WIDTH_BLOCK_DEF_CNT                32
#define XBER_KERNEL_CNTRL_DEPTH_BLOCK_DEF_CNT                64

