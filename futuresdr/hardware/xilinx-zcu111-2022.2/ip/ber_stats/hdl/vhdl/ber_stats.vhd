-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity ber_stats is
generic (
    C_S_AXI_CNTRL_ADDR_WIDTH : INTEGER := 12;
    C_S_AXI_CNTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_data_V_V_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    src_data_V_V_TVALID : IN STD_LOGIC;
    src_data_V_V_TREADY : OUT STD_LOGIC;
    hard_data_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    hard_data_TVALID : IN STD_LOGIC;
    hard_data_TREADY : OUT STD_LOGIC;
    hard_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    error_data_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    error_data_TVALID : IN STD_LOGIC;
    error_data_TREADY : OUT STD_LOGIC;
    error_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    fe_status_V_V_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    fe_status_V_V_TVALID : IN STD_LOGIC;
    fe_status_V_V_TREADY : OUT STD_LOGIC;
    s_axi_CNTRL_AWVALID : IN STD_LOGIC;
    s_axi_CNTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CNTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CNTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CNTRL_WVALID : IN STD_LOGIC;
    s_axi_CNTRL_WREADY : OUT STD_LOGIC;
    s_axi_CNTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CNTRL_DATA_WIDTH-1 downto 0);
    s_axi_CNTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CNTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CNTRL_ARVALID : IN STD_LOGIC;
    s_axi_CNTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CNTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CNTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CNTRL_RVALID : OUT STD_LOGIC;
    s_axi_CNTRL_RREADY : IN STD_LOGIC;
    s_axi_CNTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CNTRL_DATA_WIDTH-1 downto 0);
    s_axi_CNTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CNTRL_BVALID : OUT STD_LOGIC;
    s_axi_CNTRL_BREADY : IN STD_LOGIC;
    s_axi_CNTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    cntrl_aclk : IN STD_LOGIC;
    ap_rst_n_cntrl_aclk : IN STD_LOGIC );
end;


architecture behav of ber_stats is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "ber_stats,hls_ip_2016_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu9eg-ffvb1156-2L-e-es1,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.390000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=28,HLS_SYN_DSP=0,HLS_SYN_FF=4000,HLS_SYN_LUT=3207}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000010000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000100000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000001000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000010000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000100000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (27 downto 0) := "0000000001000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (27 downto 0) := "0000000010000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (27 downto 0) := "0000000100000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (27 downto 0) := "0000001000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (27 downto 0) := "0000010000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (27 downto 0) := "0000100000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (27 downto 0) := "0001000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (27 downto 0) := "0010000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (27 downto 0) := "0100000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (27 downto 0) := "1000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal k_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_ce0 : STD_LOGIC;
    signal k_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_ce0 : STD_LOGIC;
    signal n_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mask_V_ce0 : STD_LOGIC;
    signal mask_V_q0 : STD_LOGIC_VECTOR (127 downto 0);
    signal block_def_cfg_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal block_def_cfg_ce0 : STD_LOGIC;
    signal block_def_cfg_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal block_def_cnt_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal block_def_cnt_ce0 : STD_LOGIC;
    signal block_def_cnt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_defs : STD_LOGIC_VECTOR (31 downto 0);
    signal num_blocks : STD_LOGIC_VECTOR (31 downto 0);
    signal ber_stats_raw_berr_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_raw_berr_ce0 : STD_LOGIC;
    signal ber_stats_raw_berr_we0 : STD_LOGIC;
    signal ber_stats_raw_berr_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ber_stats_cor_berr_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_cor_berr_ce0 : STD_LOGIC;
    signal ber_stats_cor_berr_we0 : STD_LOGIC;
    signal ber_stats_cor_berr_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ber_stats_cor_blerr_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_cor_blerr_ce0 : STD_LOGIC;
    signal ber_stats_cor_blerr_we0 : STD_LOGIC;
    signal ber_stats_cor_blerr_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ber_stats_iter_cnt_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_iter_cnt_ce0 : STD_LOGIC;
    signal ber_stats_iter_cnt_we0 : STD_LOGIC;
    signal ber_stats_iter_cnt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ber_stats_block_cnt_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_block_cnt_ce0 : STD_LOGIC;
    signal ber_stats_block_cnt_we0 : STD_LOGIC;
    signal ber_stats_block_cnt_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal src_data_V_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal src_data_V_V_0_vld_in : STD_LOGIC;
    signal src_data_V_V_0_vld_out : STD_LOGIC;
    signal src_data_V_V_0_ack_in : STD_LOGIC;
    signal src_data_V_V_0_ack_out : STD_LOGIC;
    signal src_data_V_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal src_data_V_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal src_data_V_V_0_sel_rd : STD_LOGIC := '0';
    signal src_data_V_V_0_sel_wr : STD_LOGIC := '0';
    signal src_data_V_V_0_sel : STD_LOGIC;
    signal src_data_V_V_0_load_A : STD_LOGIC;
    signal src_data_V_V_0_load_B : STD_LOGIC;
    signal src_data_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal src_data_V_V_0_state_cmp_full : STD_LOGIC;
    signal hard_data_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal hard_data_V_data_V_0_vld_in : STD_LOGIC;
    signal hard_data_V_data_V_0_vld_out : STD_LOGIC;
    signal hard_data_V_data_V_0_ack_in : STD_LOGIC;
    signal hard_data_V_data_V_0_ack_out : STD_LOGIC;
    signal hard_data_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal hard_data_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal hard_data_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal hard_data_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal hard_data_V_data_V_0_sel : STD_LOGIC;
    signal hard_data_V_data_V_0_load_A : STD_LOGIC;
    signal hard_data_V_data_V_0_load_B : STD_LOGIC;
    signal hard_data_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal hard_data_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal hard_data_V_last_V_0_data_out : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_data_V_last_V_0_vld_in : STD_LOGIC;
    signal hard_data_V_last_V_0_vld_out : STD_LOGIC;
    signal hard_data_V_last_V_0_ack_in : STD_LOGIC;
    signal hard_data_V_last_V_0_ack_out : STD_LOGIC;
    signal hard_data_V_last_V_0_payload_A : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_data_V_last_V_0_payload_B : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_data_V_last_V_0_sel_rd : STD_LOGIC := '0';
    signal hard_data_V_last_V_0_sel_wr : STD_LOGIC := '0';
    signal hard_data_V_last_V_0_sel : STD_LOGIC;
    signal hard_data_V_last_V_0_load_A : STD_LOGIC;
    signal hard_data_V_last_V_0_load_B : STD_LOGIC;
    signal hard_data_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal hard_data_V_last_V_0_state_cmp_full : STD_LOGIC;
    signal error_data_V_data_V_0_data_out : STD_LOGIC_VECTOR (127 downto 0);
    signal error_data_V_data_V_0_vld_in : STD_LOGIC;
    signal error_data_V_data_V_0_vld_out : STD_LOGIC;
    signal error_data_V_data_V_0_ack_in : STD_LOGIC;
    signal error_data_V_data_V_0_ack_out : STD_LOGIC;
    signal error_data_V_data_V_0_payload_A : STD_LOGIC_VECTOR (127 downto 0);
    signal error_data_V_data_V_0_payload_B : STD_LOGIC_VECTOR (127 downto 0);
    signal error_data_V_data_V_0_sel_rd : STD_LOGIC := '0';
    signal error_data_V_data_V_0_sel_wr : STD_LOGIC := '0';
    signal error_data_V_data_V_0_sel : STD_LOGIC;
    signal error_data_V_data_V_0_load_A : STD_LOGIC;
    signal error_data_V_data_V_0_load_B : STD_LOGIC;
    signal error_data_V_data_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal error_data_V_data_V_0_state_cmp_full : STD_LOGIC;
    signal error_data_V_last_V_0_vld_in : STD_LOGIC;
    signal error_data_V_last_V_0_ack_out : STD_LOGIC;
    signal error_data_V_last_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal fe_status_V_V_0_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal fe_status_V_V_0_vld_in : STD_LOGIC;
    signal fe_status_V_V_0_vld_out : STD_LOGIC;
    signal fe_status_V_V_0_ack_in : STD_LOGIC;
    signal fe_status_V_V_0_ack_out : STD_LOGIC;
    signal fe_status_V_V_0_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal fe_status_V_V_0_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal fe_status_V_V_0_sel_rd : STD_LOGIC := '0';
    signal fe_status_V_V_0_sel_wr : STD_LOGIC := '0';
    signal fe_status_V_V_0_sel : STD_LOGIC;
    signal fe_status_V_V_0_load_A : STD_LOGIC;
    signal fe_status_V_V_0_load_B : STD_LOGIC;
    signal fe_status_V_V_0_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal fe_status_V_V_0_state_cmp_full : STD_LOGIC;
    signal src_data_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_17_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal hard_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal hard_in_1_2_reg_416 : STD_LOGIC_VECTOR (0 downto 0);
    signal error_data_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal tmp_19_reg_1274 : STD_LOGIC_VECTOR (0 downto 0);
    signal fe_status_V_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal ap_rst_n_cntrl_aclk_inv : STD_LOGIC;
    signal hard_in_1_1_reg_368 : STD_LOGIC_VECTOR (0 downto 0);
    signal err_cnt_reg_380 : STD_LOGIC_VECTOR (31 downto 0);
    signal rerr_cnt_reg_392 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal j1_reg_427 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_num_diff_fu_437_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_518 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state11 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_17_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_state15 : BOOLEAN;
    signal ap_reg_pp0_iter2_tmp_17_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal num_blocks_read_reg_854 : STD_LOGIC_VECTOR (31 downto 0);
    signal num_defs_read_reg_859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_877 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal def_cfg_reg_883 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_cnt_reg_888 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_cfg_1_fu_545_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_cfg_1_reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal def_cnt_1_fu_551_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_cnt_1_reg_898 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_567_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_reg_904 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal n_int_reg_928 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal k_int_reg_933 : STD_LOGIC_VECTOR (31 downto 0);
    signal mask_int_V_reg_939 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_17_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_tmp_17_reg_944 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_578_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_reg_948 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_450_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8 : BOOLEAN;
    signal grp_fu_458_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_959 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_466_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_964 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_474_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_reg_969 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_reg_974 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_490_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_979 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_498_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_984 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_506_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_989 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_reg_994 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_999 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_last_V_reg_999 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_tmp_last_V_reg_999 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_V_reg_1004 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter1_tmp_V_reg_1004 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_39_reg_1009 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_reg_1014 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_1019 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_1024 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_1029 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_44_reg_1034 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_1039 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_reg_1044 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_fu_592_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal r_V_reg_1049 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_47_reg_1054 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state10 : BOOLEAN;
    signal tmp_48_reg_1059 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_1064 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_reg_1069 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_reg_1074 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_1079 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_1084 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_54_reg_1089 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_55_reg_1094 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_1099 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_reg_1104 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_reg_1114 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_60_reg_1119 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_reg_1124 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_reg_1129 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_reg_1134 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state12 : BOOLEAN;
    signal tmp_64_reg_1139 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_reg_1144 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_reg_1149 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_1154 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_68_reg_1159 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_reg_1164 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_70_reg_1169 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_71_reg_1174 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state13 : BOOLEAN;
    signal tmp_72_reg_1179 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_reg_1184 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_74_reg_1189 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_reg_1194 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_reg_1199 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_77_reg_1204 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_78_reg_1209 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_79_reg_1214 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state14 : BOOLEAN;
    signal tmp_80_reg_1219 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_81_reg_1224 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_82_reg_1229 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_reg_1234 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_84_reg_1239 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_reg_1244 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_86_reg_1249 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_2_fu_696_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal p_2_reg_1254 : STD_LOGIC_VECTOR (127 downto 0);
    signal err_cnt_1_fu_710_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal err_cnt_1_reg_1259 : STD_LOGIC_VECTOR (31 downto 0);
    signal rerr_cnt_1_fu_720_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state35 : BOOLEAN;
    signal tmp_19_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state38 : BOOLEAN;
    signal j_1_fu_731_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal ber_stats_raw_berr_a_reg_1283 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ber_stats_cor_berr_a_reg_1288 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_raw_berr_l_reg_1293 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ber_stats_cor_berr_l_reg_1298 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_737_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_1303 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal tmp_23_fu_742_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_1308 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_reg_1313 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal ber_stats_cor_blerr_s_reg_1317 : STD_LOGIC_VECTOR (4 downto 0);
    signal ber_stats_cor_blerr_1_reg_1322 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal tmp_25_fu_753_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_1327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal ber_stats_block_cnt_s_reg_1332 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ber_stats_iter_cnt_a_reg_1337 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_i_2_fu_758_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_i_2_reg_1342 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_i_1_fu_764_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal def_i_1_reg_1348 : STD_LOGIC_VECTOR (7 downto 0);
    signal ber_stats_block_cnt_1_reg_1354 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ber_stats_iter_cnt_l_reg_1359 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_770_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal total_blocks_2_fu_774_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_blocks_2_reg_1371 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_reg_1376 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_787_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_1381 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_1386 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_i_2_fu_817_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal def_i_2_reg_1391 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_i_1_fu_824_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal b_i_1_reg_1396 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_blocks_1_fu_830_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_blocks_1_reg_1401 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal hard_in_1_2_phi_fu_419_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_num_diff_fu_437_ap_start : STD_LOGIC;
    signal grp_num_diff_fu_437_ap_done : STD_LOGIC;
    signal grp_num_diff_fu_437_ap_idle : STD_LOGIC;
    signal grp_num_diff_fu_437_ap_ready : STD_LOGIC;
    signal grp_num_diff_fu_437_ap_ce : STD_LOGIC;
    signal grp_num_diff_fu_437_in1_V : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_num_diff_fu_437_in2_V : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state9_ignore_call95 : BOOLEAN;
    signal ap_block_state10_ignore_call95 : BOOLEAN;
    signal ap_block_state11_ignore_call95 : BOOLEAN;
    signal ap_block_state12_ignore_call95 : BOOLEAN;
    signal ap_block_state13_ignore_call95 : BOOLEAN;
    signal ap_block_state14_ignore_call95 : BOOLEAN;
    signal ap_block_state15_ignore_call95 : BOOLEAN;
    signal ap_block_state8_ignore_call95 : BOOLEAN;
    signal def_i_reg_332 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal b_i_reg_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal total_blocks_reg_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal err_cnt_phi_fu_384_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_phi_fu_408_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_grp_num_diff_fu_437_ap_start : STD_LOGIC := '0';
    signal hard_bits_V_fu_598_p2 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_15_fu_527_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal def_cnt_2_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal def_cfg_2_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0181_s_fu_168 : STD_LOGIC_VECTOR (127 downto 0);
    signal error_bits_comp_V_7_fu_618_p66 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_3_fu_608_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal err_cnt_1_trunc_ext_fu_706_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal rerr_cnt_1_trunc_ext_fu_716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_fu_792_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_s_30_fu_802_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_s_fu_811_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component num_diff IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        in1_V : IN STD_LOGIC_VECTOR (127 downto 0);
        in2_V : IN STD_LOGIC_VECTOR (127 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ber_stats_CNTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        k_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        k_ce0 : IN STD_LOGIC;
        k_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        n_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        n_ce0 : IN STD_LOGIC;
        n_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        mask_V_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        mask_V_ce0 : IN STD_LOGIC;
        mask_V_q0 : OUT STD_LOGIC_VECTOR (127 downto 0);
        block_def_cfg_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        block_def_cfg_ce0 : IN STD_LOGIC;
        block_def_cfg_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        block_def_cnt_address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        block_def_cnt_ce0 : IN STD_LOGIC;
        block_def_cnt_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_defs : OUT STD_LOGIC_VECTOR (31 downto 0);
        num_blocks : OUT STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_raw_berr_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ber_stats_raw_berr_ce0 : IN STD_LOGIC;
        ber_stats_raw_berr_we0 : IN STD_LOGIC;
        ber_stats_raw_berr_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_raw_berr_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_cor_berr_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ber_stats_cor_berr_ce0 : IN STD_LOGIC;
        ber_stats_cor_berr_we0 : IN STD_LOGIC;
        ber_stats_cor_berr_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_cor_berr_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_cor_blerr_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ber_stats_cor_blerr_ce0 : IN STD_LOGIC;
        ber_stats_cor_blerr_we0 : IN STD_LOGIC;
        ber_stats_cor_blerr_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_cor_blerr_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_iter_cnt_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ber_stats_iter_cnt_ce0 : IN STD_LOGIC;
        ber_stats_iter_cnt_we0 : IN STD_LOGIC;
        ber_stats_iter_cnt_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_iter_cnt_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_block_cnt_address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ber_stats_block_cnt_ce0 : IN STD_LOGIC;
        ber_stats_block_cnt_we0 : IN STD_LOGIC;
        ber_stats_block_cnt_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ber_stats_block_cnt_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        clk : IN STD_LOGIC;
        rst : IN STD_LOGIC );
    end component;



begin
    ber_stats_CNTRL_s_axi_U : component ber_stats_CNTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CNTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CNTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CNTRL_AWVALID,
        AWREADY => s_axi_CNTRL_AWREADY,
        AWADDR => s_axi_CNTRL_AWADDR,
        WVALID => s_axi_CNTRL_WVALID,
        WREADY => s_axi_CNTRL_WREADY,
        WDATA => s_axi_CNTRL_WDATA,
        WSTRB => s_axi_CNTRL_WSTRB,
        ARVALID => s_axi_CNTRL_ARVALID,
        ARREADY => s_axi_CNTRL_ARREADY,
        ARADDR => s_axi_CNTRL_ARADDR,
        RVALID => s_axi_CNTRL_RVALID,
        RREADY => s_axi_CNTRL_RREADY,
        RDATA => s_axi_CNTRL_RDATA,
        RRESP => s_axi_CNTRL_RRESP,
        BVALID => s_axi_CNTRL_BVALID,
        BREADY => s_axi_CNTRL_BREADY,
        BRESP => s_axi_CNTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        k_address0 => k_address0,
        k_ce0 => k_ce0,
        k_q0 => k_q0,
        n_address0 => n_address0,
        n_ce0 => n_ce0,
        n_q0 => n_q0,
        mask_V_address0 => mask_V_address0,
        mask_V_ce0 => mask_V_ce0,
        mask_V_q0 => mask_V_q0,
        block_def_cfg_address0 => block_def_cfg_address0,
        block_def_cfg_ce0 => block_def_cfg_ce0,
        block_def_cfg_q0 => block_def_cfg_q0,
        block_def_cnt_address0 => block_def_cnt_address0,
        block_def_cnt_ce0 => block_def_cnt_ce0,
        block_def_cnt_q0 => block_def_cnt_q0,
        num_defs => num_defs,
        num_blocks => num_blocks,
        ber_stats_raw_berr_address0 => ber_stats_raw_berr_address0,
        ber_stats_raw_berr_ce0 => ber_stats_raw_berr_ce0,
        ber_stats_raw_berr_we0 => ber_stats_raw_berr_we0,
        ber_stats_raw_berr_d0 => tmp_22_reg_1303,
        ber_stats_raw_berr_q0 => ber_stats_raw_berr_q0,
        ber_stats_cor_berr_address0 => ber_stats_cor_berr_address0,
        ber_stats_cor_berr_ce0 => ber_stats_cor_berr_ce0,
        ber_stats_cor_berr_we0 => ber_stats_cor_berr_we0,
        ber_stats_cor_berr_d0 => tmp_23_reg_1308,
        ber_stats_cor_berr_q0 => ber_stats_cor_berr_q0,
        ber_stats_cor_blerr_address0 => ber_stats_cor_blerr_address0,
        ber_stats_cor_blerr_ce0 => ber_stats_cor_blerr_ce0,
        ber_stats_cor_blerr_we0 => ber_stats_cor_blerr_we0,
        ber_stats_cor_blerr_d0 => tmp_25_reg_1327,
        ber_stats_cor_blerr_q0 => ber_stats_cor_blerr_q0,
        ber_stats_iter_cnt_address0 => ber_stats_iter_cnt_address0,
        ber_stats_iter_cnt_ce0 => ber_stats_iter_cnt_ce0,
        ber_stats_iter_cnt_we0 => ber_stats_iter_cnt_we0,
        ber_stats_iter_cnt_d0 => tmp_27_reg_1386,
        ber_stats_iter_cnt_q0 => ber_stats_iter_cnt_q0,
        ber_stats_block_cnt_address0 => ber_stats_block_cnt_address0,
        ber_stats_block_cnt_ce0 => ber_stats_block_cnt_ce0,
        ber_stats_block_cnt_we0 => ber_stats_block_cnt_we0,
        ber_stats_block_cnt_d0 => tmp_26_reg_1381,
        ber_stats_block_cnt_q0 => ber_stats_block_cnt_q0,
        clk => cntrl_aclk,
        rst => ap_rst_n_cntrl_aclk_inv);

    grp_num_diff_fu_437 : component num_diff
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_num_diff_fu_437_ap_start,
        ap_done => grp_num_diff_fu_437_ap_done,
        ap_idle => grp_num_diff_fu_437_ap_idle,
        ap_ready => grp_num_diff_fu_437_ap_ready,
        ap_ce => grp_num_diff_fu_437_ap_ce,
        in1_V => grp_num_diff_fu_437_in1_V,
        in2_V => grp_num_diff_fu_437_in2_V,
        ap_return => grp_num_diff_fu_437_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))) and (ap_const_lv1_0 = tmp_17_fu_573_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14))) and not((ap_const_lv1_0 = tmp_17_reg_944)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14))) and (ap_const_lv1_0 = tmp_17_reg_944)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14))))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14)))))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35))) and (ap_const_lv1_1 = hard_in_1_2_phi_fu_419_p4))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35))) and not((ap_const_lv1_1 = hard_in_1_2_phi_fu_419_p4)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state33) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35))) and (ap_const_lv1_1 = hard_in_1_2_phi_fu_419_p4)))) then 
                    ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))) and (ap_const_lv1_0 = tmp_19_fu_726_p2))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))) and not((ap_const_lv1_0 = tmp_19_fu_726_p2)))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))) and (ap_const_lv1_0 = tmp_19_fu_726_p2)))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_grp_num_diff_fu_437_ap_start_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_reg_grp_num_diff_fu_437_ap_start <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12)))))) then 
                    ap_reg_grp_num_diff_fu_437_ap_start <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_num_diff_fu_437_ap_ready)) then 
                    ap_reg_grp_num_diff_fu_437_ap_start <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    error_data_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                error_data_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = error_data_V_data_V_0_ack_out) and (ap_const_logic_1 = error_data_V_data_V_0_vld_out))) then 
                                        error_data_V_data_V_0_sel_rd <= not(error_data_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    error_data_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                error_data_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = error_data_V_data_V_0_vld_in) and (ap_const_logic_1 = error_data_V_data_V_0_ack_in))) then 
                                        error_data_V_data_V_0_sel_wr <= not(error_data_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    error_data_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                error_data_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = error_data_V_data_V_0_vld_in) and (ap_const_logic_1 = error_data_V_data_V_0_ack_out) and (ap_const_lv2_3 = error_data_V_data_V_0_state)) or ((ap_const_logic_0 = error_data_V_data_V_0_vld_in) and (ap_const_lv2_2 = error_data_V_data_V_0_state)))) then 
                    error_data_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = error_data_V_data_V_0_vld_in) and (ap_const_logic_0 = error_data_V_data_V_0_ack_out) and (ap_const_lv2_3 = error_data_V_data_V_0_state)) or ((ap_const_logic_0 = error_data_V_data_V_0_ack_out) and (ap_const_lv2_1 = error_data_V_data_V_0_state)))) then 
                    error_data_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = error_data_V_data_V_0_vld_in) and (ap_const_lv2_2 = error_data_V_data_V_0_state)) or ((ap_const_logic_1 = error_data_V_data_V_0_ack_out) and (ap_const_lv2_1 = error_data_V_data_V_0_state)) or ((ap_const_lv2_3 = error_data_V_data_V_0_state) and not(((ap_const_logic_1 = error_data_V_data_V_0_vld_in) and (ap_const_logic_0 = error_data_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = error_data_V_data_V_0_vld_in) and (ap_const_logic_1 = error_data_V_data_V_0_ack_out)))))) then 
                    error_data_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    error_data_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    error_data_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                error_data_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = error_data_V_last_V_0_vld_in) and (ap_const_logic_1 = error_data_V_last_V_0_ack_out) and (ap_const_lv2_3 = error_data_V_last_V_0_state)) or ((ap_const_logic_0 = error_data_V_last_V_0_vld_in) and (ap_const_lv2_2 = error_data_V_last_V_0_state)))) then 
                    error_data_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = error_data_V_last_V_0_vld_in) and (ap_const_logic_0 = error_data_V_last_V_0_ack_out) and (ap_const_lv2_3 = error_data_V_last_V_0_state)) or ((ap_const_logic_0 = error_data_V_last_V_0_ack_out) and (ap_const_lv2_1 = error_data_V_last_V_0_state)))) then 
                    error_data_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = error_data_V_last_V_0_vld_in) and (ap_const_lv2_2 = error_data_V_last_V_0_state)) or ((ap_const_logic_1 = error_data_V_last_V_0_ack_out) and (ap_const_lv2_1 = error_data_V_last_V_0_state)) or ((ap_const_lv2_3 = error_data_V_last_V_0_state) and not(((ap_const_logic_1 = error_data_V_last_V_0_vld_in) and (ap_const_logic_0 = error_data_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = error_data_V_last_V_0_vld_in) and (ap_const_logic_1 = error_data_V_last_V_0_ack_out)))))) then 
                    error_data_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    error_data_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    fe_status_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                fe_status_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = fe_status_V_V_0_ack_out) and (ap_const_logic_1 = fe_status_V_V_0_vld_out))) then 
                                        fe_status_V_V_0_sel_rd <= not(fe_status_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    fe_status_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                fe_status_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = fe_status_V_V_0_vld_in) and (ap_const_logic_1 = fe_status_V_V_0_ack_in))) then 
                                        fe_status_V_V_0_sel_wr <= not(fe_status_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    fe_status_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                fe_status_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = fe_status_V_V_0_vld_in) and (ap_const_logic_1 = fe_status_V_V_0_ack_out) and (ap_const_lv2_3 = fe_status_V_V_0_state)) or ((ap_const_logic_0 = fe_status_V_V_0_vld_in) and (ap_const_lv2_2 = fe_status_V_V_0_state)))) then 
                    fe_status_V_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = fe_status_V_V_0_vld_in) and (ap_const_logic_0 = fe_status_V_V_0_ack_out) and (ap_const_lv2_3 = fe_status_V_V_0_state)) or ((ap_const_logic_0 = fe_status_V_V_0_ack_out) and (ap_const_lv2_1 = fe_status_V_V_0_state)))) then 
                    fe_status_V_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = fe_status_V_V_0_vld_in) and (ap_const_lv2_2 = fe_status_V_V_0_state)) or ((ap_const_logic_1 = fe_status_V_V_0_ack_out) and (ap_const_lv2_1 = fe_status_V_V_0_state)) or ((ap_const_lv2_3 = fe_status_V_V_0_state) and not(((ap_const_logic_1 = fe_status_V_V_0_vld_in) and (ap_const_logic_0 = fe_status_V_V_0_ack_out))) and not(((ap_const_logic_0 = fe_status_V_V_0_vld_in) and (ap_const_logic_1 = fe_status_V_V_0_ack_out)))))) then 
                    fe_status_V_V_0_state <= ap_const_lv2_3;
                else 
                    fe_status_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_data_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_data_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = hard_data_V_data_V_0_ack_out) and (ap_const_logic_1 = hard_data_V_data_V_0_vld_out))) then 
                                        hard_data_V_data_V_0_sel_rd <= not(hard_data_V_data_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_data_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_data_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = hard_data_V_data_V_0_vld_in) and (ap_const_logic_1 = hard_data_V_data_V_0_ack_in))) then 
                                        hard_data_V_data_V_0_sel_wr <= not(hard_data_V_data_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_data_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_data_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = hard_data_V_data_V_0_vld_in) and (ap_const_logic_1 = hard_data_V_data_V_0_ack_out) and (ap_const_lv2_3 = hard_data_V_data_V_0_state)) or ((ap_const_logic_0 = hard_data_V_data_V_0_vld_in) and (ap_const_lv2_2 = hard_data_V_data_V_0_state)))) then 
                    hard_data_V_data_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = hard_data_V_data_V_0_vld_in) and (ap_const_logic_0 = hard_data_V_data_V_0_ack_out) and (ap_const_lv2_3 = hard_data_V_data_V_0_state)) or ((ap_const_logic_0 = hard_data_V_data_V_0_ack_out) and (ap_const_lv2_1 = hard_data_V_data_V_0_state)))) then 
                    hard_data_V_data_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = hard_data_V_data_V_0_vld_in) and (ap_const_lv2_2 = hard_data_V_data_V_0_state)) or ((ap_const_logic_1 = hard_data_V_data_V_0_ack_out) and (ap_const_lv2_1 = hard_data_V_data_V_0_state)) or ((ap_const_lv2_3 = hard_data_V_data_V_0_state) and not(((ap_const_logic_1 = hard_data_V_data_V_0_vld_in) and (ap_const_logic_0 = hard_data_V_data_V_0_ack_out))) and not(((ap_const_logic_0 = hard_data_V_data_V_0_vld_in) and (ap_const_logic_1 = hard_data_V_data_V_0_ack_out)))))) then 
                    hard_data_V_data_V_0_state <= ap_const_lv2_3;
                else 
                    hard_data_V_data_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_last_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_last_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = hard_data_V_last_V_0_ack_out) and (ap_const_logic_1 = hard_data_V_last_V_0_vld_out))) then 
                                        hard_data_V_last_V_0_sel_rd <= not(hard_data_V_last_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_last_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_last_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = hard_data_V_last_V_0_vld_in) and (ap_const_logic_1 = hard_data_V_last_V_0_ack_in))) then 
                                        hard_data_V_last_V_0_sel_wr <= not(hard_data_V_last_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    hard_data_V_last_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                hard_data_V_last_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = hard_data_V_last_V_0_vld_in) and (ap_const_logic_1 = hard_data_V_last_V_0_ack_out) and (ap_const_lv2_3 = hard_data_V_last_V_0_state)) or ((ap_const_logic_0 = hard_data_V_last_V_0_vld_in) and (ap_const_lv2_2 = hard_data_V_last_V_0_state)))) then 
                    hard_data_V_last_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = hard_data_V_last_V_0_vld_in) and (ap_const_logic_0 = hard_data_V_last_V_0_ack_out) and (ap_const_lv2_3 = hard_data_V_last_V_0_state)) or ((ap_const_logic_0 = hard_data_V_last_V_0_ack_out) and (ap_const_lv2_1 = hard_data_V_last_V_0_state)))) then 
                    hard_data_V_last_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = hard_data_V_last_V_0_vld_in) and (ap_const_lv2_2 = hard_data_V_last_V_0_state)) or ((ap_const_logic_1 = hard_data_V_last_V_0_ack_out) and (ap_const_lv2_1 = hard_data_V_last_V_0_state)) or ((ap_const_lv2_3 = hard_data_V_last_V_0_state) and not(((ap_const_logic_1 = hard_data_V_last_V_0_vld_in) and (ap_const_logic_0 = hard_data_V_last_V_0_ack_out))) and not(((ap_const_logic_0 = hard_data_V_last_V_0_vld_in) and (ap_const_logic_1 = hard_data_V_last_V_0_ack_out)))))) then 
                    hard_data_V_last_V_0_state <= ap_const_lv2_3;
                else 
                    hard_data_V_last_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    src_data_V_V_0_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                src_data_V_V_0_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = src_data_V_V_0_ack_out) and (ap_const_logic_1 = src_data_V_V_0_vld_out))) then 
                                        src_data_V_V_0_sel_rd <= not(src_data_V_V_0_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    src_data_V_V_0_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                src_data_V_V_0_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = src_data_V_V_0_vld_in) and (ap_const_logic_1 = src_data_V_V_0_ack_in))) then 
                                        src_data_V_V_0_sel_wr <= not(src_data_V_V_0_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    src_data_V_V_0_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                src_data_V_V_0_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = src_data_V_V_0_vld_in) and (ap_const_logic_1 = src_data_V_V_0_ack_out) and (src_data_V_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = src_data_V_V_0_vld_in) and (src_data_V_V_0_state = ap_const_lv2_2)))) then 
                    src_data_V_V_0_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = src_data_V_V_0_vld_in) and (ap_const_logic_0 = src_data_V_V_0_ack_out) and (src_data_V_V_0_state = ap_const_lv2_3)) or ((ap_const_logic_0 = src_data_V_V_0_ack_out) and (src_data_V_V_0_state = ap_const_lv2_1)))) then 
                    src_data_V_V_0_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = src_data_V_V_0_vld_in) and (src_data_V_V_0_state = ap_const_lv2_2)) or ((ap_const_logic_1 = src_data_V_V_0_ack_out) and (src_data_V_V_0_state = ap_const_lv2_1)) or ((src_data_V_V_0_state = ap_const_lv2_3) and not(((ap_const_logic_1 = src_data_V_V_0_vld_in) and (ap_const_logic_0 = src_data_V_V_0_ack_out))) and not(((ap_const_logic_0 = src_data_V_V_0_vld_in) and (ap_const_logic_1 = src_data_V_V_0_ack_out)))))) then 
                    src_data_V_V_0_state <= ap_const_lv2_3;
                else 
                    src_data_V_V_0_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    b_i_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                b_i_reg_344 <= b_i_1_reg_1396;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                b_i_reg_344 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    def_i_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                def_i_reg_332 <= def_i_2_reg_1391;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                def_i_reg_332 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    err_cnt_reg_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_lv1_1 = ap_reg_pp0_iter2_tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12))) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
                err_cnt_reg_380 <= err_cnt_1_reg_1259;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                err_cnt_reg_380 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    hard_in_1_1_reg_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))) and (ap_const_lv1_1 = ap_reg_pp0_iter3_tmp_17_reg_944))) then 
                hard_in_1_1_reg_368 <= ap_reg_pp0_iter2_tmp_last_V_reg_999;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                hard_in_1_1_reg_368 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    hard_in_1_2_reg_416_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
                hard_in_1_2_reg_416 <= hard_in_1_1_reg_368;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = hard_in_1_2_reg_416) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35))))) then 
                hard_in_1_2_reg_416 <= hard_data_V_last_V_0_data_out;
            end if; 
        end if;
    end process;

    j1_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                j1_reg_427 <= j_reg_404;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_1 = tmp_19_fu_726_p2))) then 
                j1_reg_427 <= j_1_fu_731_p2;
            end if; 
        end if;
    end process;

    j_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))))) then 
                j_reg_404 <= i_reg_948;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                j_reg_404 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    rerr_cnt_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))) and (ap_const_lv1_1 = ap_reg_pp0_iter3_tmp_17_reg_944))) then 
                rerr_cnt_reg_392 <= rerr_cnt_1_fu_720_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                rerr_cnt_reg_392 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    total_blocks_reg_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
                total_blocks_reg_356 <= total_blocks_1_reg_1401;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                total_blocks_reg_356 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))))) then
                ap_reg_pp0_iter1_tmp_17_reg_944 <= tmp_17_reg_944;
                ap_reg_pp0_iter2_tmp_17_reg_944 <= ap_reg_pp0_iter1_tmp_17_reg_944;
                ap_reg_pp0_iter3_tmp_17_reg_944 <= ap_reg_pp0_iter2_tmp_17_reg_944;
                tmp_17_reg_944 <= tmp_17_fu_573_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9))))) then
                ap_reg_pp0_iter1_tmp_V_reg_1004 <= tmp_V_reg_1004;
                ap_reg_pp0_iter1_tmp_last_V_reg_999 <= tmp_last_V_reg_999;
                ap_reg_pp0_iter2_tmp_last_V_reg_999 <= ap_reg_pp0_iter1_tmp_last_V_reg_999;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state47) and (fe_status_V_V_0_vld_out = ap_const_logic_1))) then
                b_i_1_reg_1396 <= b_i_1_fu_824_p3;
                def_i_2_reg_1391 <= def_i_2_fu_817_p3;
                tmp_26_reg_1381 <= tmp_26_fu_787_p2;
                tmp_27_reg_1386 <= tmp_27_fu_806_p2;
                total_blocks_1_reg_1401 <= total_blocks_1_fu_830_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                b_i_2_reg_1342 <= b_i_2_fu_758_p2;
                ber_stats_block_cnt_s_reg_1332 <= tmp_16_reg_904(5 - 1 downto 0);
                ber_stats_iter_cnt_a_reg_1337 <= tmp_16_reg_904(5 - 1 downto 0);
                def_i_1_reg_1348 <= def_i_1_fu_764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                ber_stats_block_cnt_1_reg_1354 <= ber_stats_block_cnt_q0;
                ber_stats_iter_cnt_l_reg_1359 <= ber_stats_iter_cnt_q0;
                tmp_28_reg_1364 <= tmp_28_fu_770_p2;
                tmp_30_reg_1376 <= tmp_30_fu_782_p2;
                total_blocks_2_reg_1371 <= total_blocks_2_fu_774_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                ber_stats_cor_berr_a_reg_1288 <= tmp_16_reg_904(5 - 1 downto 0);
                ber_stats_raw_berr_a_reg_1283 <= tmp_16_reg_904(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                ber_stats_cor_berr_l_reg_1298 <= ber_stats_cor_berr_q0;
                ber_stats_raw_berr_l_reg_1293 <= ber_stats_raw_berr_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                ber_stats_cor_blerr_1_reg_1322 <= ber_stats_cor_blerr_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state42) and (ap_const_lv1_0 = tmp_24_fu_747_p2))) then
                ber_stats_cor_blerr_s_reg_1317 <= tmp_16_reg_904(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                def_cfg_1_reg_893 <= def_cfg_1_fu_545_p3;
                def_cfg_2_fu_164 <= def_cfg_1_fu_545_p3;
                def_cnt_1_reg_898 <= def_cnt_1_fu_551_p3;
                def_cnt_2_fu_160 <= def_cnt_1_fu_551_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                def_cfg_reg_883 <= block_def_cfg_q0;
                def_cnt_reg_888 <= block_def_cnt_q0;
                tmp_s_reg_877 <= tmp_s_fu_533_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12))))) then
                err_cnt_1_reg_1259 <= err_cnt_1_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = error_data_V_data_V_0_load_A)) then
                error_data_V_data_V_0_payload_A <= error_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = error_data_V_data_V_0_load_B)) then
                error_data_V_data_V_0_payload_B <= error_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = fe_status_V_V_0_load_A)) then
                fe_status_V_V_0_payload_A <= fe_status_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = fe_status_V_V_0_load_B)) then
                fe_status_V_V_0_payload_B <= fe_status_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = hard_data_V_data_V_0_load_A)) then
                hard_data_V_data_V_0_payload_A <= hard_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = hard_data_V_data_V_0_load_B)) then
                hard_data_V_data_V_0_payload_B <= hard_data_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = hard_data_V_last_V_0_load_A)) then
                hard_data_V_last_V_0_payload_A <= hard_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = hard_data_V_last_V_0_load_B)) then
                hard_data_V_last_V_0_payload_B <= hard_data_TLAST;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))) and (ap_const_lv1_1 = tmp_17_fu_573_p2))) then
                i_reg_948 <= i_fu_578_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                k_int_reg_933 <= k_q0;
                mask_int_V_reg_939 <= mask_V_q0;
                n_int_reg_928 <= n_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                num_blocks_read_reg_854 <= num_blocks;
                num_defs_read_reg_859 <= num_defs;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))))) then
                p_0181_s_fu_168 <= error_bits_comp_V_7_fu_618_p66;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))))) then
                p_2_reg_1254 <= p_2_fu_696_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9))))) then
                r_V_reg_1049 <= r_V_fu_592_p3;
                tmp_V_reg_1004 <= src_data_V_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state11))) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_17_reg_944)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))) and (ap_const_lv1_1 = ap_reg_pp0_iter2_tmp_17_reg_944)))) then
                reg_518 <= grp_num_diff_fu_437_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = src_data_V_V_0_load_A)) then
                src_data_V_V_0_payload_A <= src_data_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = src_data_V_V_0_load_B)) then
                src_data_V_V_0_payload_B <= src_data_V_V_TDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                    tmp_16_reg_904(31 downto 0) <= tmp_16_fu_567_p1(31 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))))) then
                tmp_18_reg_994 <= tmp_18_fu_584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))))) then
                tmp_19_reg_1274 <= tmp_19_fu_726_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                tmp_22_reg_1303 <= tmp_22_fu_737_p2;
                tmp_23_reg_1308 <= tmp_23_fu_742_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                tmp_24_reg_1313 <= tmp_24_fu_747_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                tmp_25_reg_1327 <= tmp_25_fu_753_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))))) then
                tmp_31_reg_954 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_32_reg_959 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_33_reg_964 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_34_reg_969 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_35_reg_974 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_36_reg_979 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_37_reg_984 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_38_reg_989 <= error_data_V_data_V_0_data_out(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9))))) then
                tmp_39_reg_1009 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_40_reg_1014 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_41_reg_1019 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_42_reg_1024 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_43_reg_1029 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_44_reg_1034 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_45_reg_1039 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_46_reg_1044 <= error_data_V_data_V_0_data_out(63 downto 63);
                tmp_last_V_reg_999 <= hard_data_V_last_V_0_data_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state10))))) then
                tmp_47_reg_1054 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_48_reg_1059 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_49_reg_1064 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_50_reg_1069 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_51_reg_1074 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_52_reg_1079 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_53_reg_1084 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_54_reg_1089 <= error_data_V_data_V_0_data_out(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state11))))) then
                tmp_55_reg_1094 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_56_reg_1099 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_57_reg_1104 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_58_reg_1109 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_59_reg_1114 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_60_reg_1119 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_61_reg_1124 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_62_reg_1129 <= error_data_V_data_V_0_data_out(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12))))) then
                tmp_63_reg_1134 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_64_reg_1139 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_65_reg_1144 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_66_reg_1149 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_67_reg_1154 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_68_reg_1159 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_69_reg_1164 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_70_reg_1169 <= error_data_V_data_V_0_data_out(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13))))) then
                tmp_71_reg_1174 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_72_reg_1179 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_73_reg_1184 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_74_reg_1189 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_75_reg_1194 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_76_reg_1199 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_77_reg_1204 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_78_reg_1209 <= error_data_V_data_V_0_data_out(63 downto 63);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14))))) then
                tmp_79_reg_1214 <= error_data_V_data_V_0_data_out(7 downto 7);
                tmp_80_reg_1219 <= error_data_V_data_V_0_data_out(15 downto 15);
                tmp_81_reg_1224 <= error_data_V_data_V_0_data_out(23 downto 23);
                tmp_82_reg_1229 <= error_data_V_data_V_0_data_out(31 downto 31);
                tmp_83_reg_1234 <= error_data_V_data_V_0_data_out(39 downto 39);
                tmp_84_reg_1239 <= error_data_V_data_V_0_data_out(47 downto 47);
                tmp_85_reg_1244 <= error_data_V_data_V_0_data_out(55 downto 55);
                tmp_86_reg_1249 <= error_data_V_data_V_0_data_out(63 downto 63);
            end if;
        end if;
    end process;
    tmp_16_reg_904(63 downto 32) <= "00000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, fe_status_V_V_0_vld_out, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter1, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter1, ap_block_state11, ap_enable_reg_pp0_iter3, ap_block_state15, tmp_fu_522_p2, tmp_17_fu_573_p2, ap_block_state8, ap_block_state9, ap_block_state10, ap_block_state12, ap_block_state13, ap_block_state14, ap_block_state35, tmp_19_fu_726_p2, ap_block_state38, ap_enable_reg_pp2_iter0, tmp_24_fu_747_p2, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter0, hard_in_1_2_phi_fu_419_p4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((ap_start = ap_const_logic_1)) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((ap_const_lv1_0 = tmp_fu_522_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))) and (ap_const_lv1_0 = tmp_17_fu_573_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15))) and (ap_const_lv1_0 = tmp_17_fu_573_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))) and not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8))) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state10)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state11)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35))) and (ap_const_lv1_1 = hard_in_1_2_phi_fu_419_p4) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35))) and (ap_const_lv1_1 = hard_in_1_2_phi_fu_419_p4) and (ap_const_logic_1 = ap_enable_reg_pp1_iter0))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if (not((not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = tmp_19_fu_726_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38))) and (ap_const_logic_1 = ap_enable_reg_pp2_iter0) and (ap_const_lv1_0 = tmp_19_fu_726_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                if ((ap_const_lv1_1 = tmp_24_fu_747_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                if ((fe_status_V_V_0_vld_out = ap_const_logic_1)) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(13);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(14);
    ap_CS_fsm_state36 <= ap_CS_fsm(16);
    ap_CS_fsm_state39 <= ap_CS_fsm(18);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(19);
    ap_CS_fsm_state41 <= ap_CS_fsm(20);
    ap_CS_fsm_state42 <= ap_CS_fsm(21);
    ap_CS_fsm_state43 <= ap_CS_fsm(22);
    ap_CS_fsm_state44 <= ap_CS_fsm(23);
    ap_CS_fsm_state45 <= ap_CS_fsm(24);
    ap_CS_fsm_state46 <= ap_CS_fsm(25);
    ap_CS_fsm_state47 <= ap_CS_fsm(26);
    ap_CS_fsm_state48 <= ap_CS_fsm(27);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state10_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state10 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state10_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state10_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state11_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state11 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state11_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state11_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state12_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state12 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state12_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state12_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state13_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state13 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state13_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state13_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state14_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state14 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state14_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state14_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state15_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state15 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state15_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state15_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state35_assign_proc : process(hard_data_V_data_V_0_vld_out, hard_in_1_2_reg_416)
    begin
                ap_block_state35 <= ((ap_const_lv1_0 = hard_in_1_2_reg_416) and (ap_const_logic_0 = hard_data_V_data_V_0_vld_out));
    end process;


    ap_block_state38_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_19_reg_1274)
    begin
                ap_block_state38 <= ((ap_const_lv1_1 = tmp_19_reg_1274) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state8_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state8 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state8_ignore_call95_assign_proc : process(error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state8_ignore_call95 <= ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out));
    end process;


    ap_block_state9_assign_proc : process(src_data_V_V_0_vld_out, hard_data_V_data_V_0_vld_out, error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state9 <= (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out)) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = hard_data_V_data_V_0_vld_out)) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = src_data_V_V_0_vld_out)));
    end process;


    ap_block_state9_ignore_call95_assign_proc : process(src_data_V_V_0_vld_out, hard_data_V_data_V_0_vld_out, error_data_V_data_V_0_vld_out, tmp_17_reg_944)
    begin
                ap_block_state9_ignore_call95 <= (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = error_data_V_data_V_0_vld_out)) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = hard_data_V_data_V_0_vld_out)) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_0 = src_data_V_V_0_vld_out)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, tmp_fu_522_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_fu_522_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp1_iter0) and (ap_const_logic_0 = ap_enable_reg_pp1_iter1))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp2_iter0) and (ap_const_logic_0 = ap_enable_reg_pp2_iter1))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_fu_522_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = tmp_fu_522_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_cntrl_aclk_inv_assign_proc : process(ap_rst_n_cntrl_aclk)
    begin
                ap_rst_n_cntrl_aclk_inv <= not(ap_rst_n_cntrl_aclk);
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    b_i_1_fu_824_p3 <= 
        ap_const_lv32_0 when (tmp_28_reg_1364(0) = '1') else 
        b_i_2_reg_1342;
    b_i_2_fu_758_p2 <= std_logic_vector(unsigned(b_i_reg_344) + unsigned(ap_const_lv32_1));

    ber_stats_block_cnt_address0_assign_proc : process(tmp_16_reg_904, ber_stats_block_cnt_s_reg_1332, ap_CS_fsm_state45, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ber_stats_block_cnt_address0 <= ber_stats_block_cnt_s_reg_1332;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ber_stats_block_cnt_address0 <= tmp_16_reg_904(5 - 1 downto 0);
        else 
            ber_stats_block_cnt_address0 <= "XXXXX";
        end if; 
    end process;


    ber_stats_block_cnt_ce0_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            ber_stats_block_cnt_ce0 <= ap_const_logic_1;
        else 
            ber_stats_block_cnt_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_block_cnt_we0_assign_proc : process(ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ber_stats_block_cnt_we0 <= ap_const_logic_1;
        else 
            ber_stats_block_cnt_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_cor_berr_address0_assign_proc : process(tmp_16_reg_904, ap_CS_fsm_state39, ber_stats_cor_berr_a_reg_1288, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ber_stats_cor_berr_address0 <= ber_stats_cor_berr_a_reg_1288;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ber_stats_cor_berr_address0 <= tmp_16_reg_904(5 - 1 downto 0);
        else 
            ber_stats_cor_berr_address0 <= "XXXXX";
        end if; 
    end process;


    ber_stats_cor_berr_ce0_assign_proc : process(ap_CS_fsm_state39, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ber_stats_cor_berr_ce0 <= ap_const_logic_1;
        else 
            ber_stats_cor_berr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_cor_berr_we0_assign_proc : process(ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ber_stats_cor_berr_we0 <= ap_const_logic_1;
        else 
            ber_stats_cor_berr_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_cor_blerr_address0_assign_proc : process(tmp_16_reg_904, ap_CS_fsm_state42, ber_stats_cor_blerr_s_reg_1317, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ber_stats_cor_blerr_address0 <= ber_stats_cor_blerr_s_reg_1317;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ber_stats_cor_blerr_address0 <= tmp_16_reg_904(5 - 1 downto 0);
        else 
            ber_stats_cor_blerr_address0 <= "XXXXX";
        end if; 
    end process;


    ber_stats_cor_blerr_ce0_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            ber_stats_cor_blerr_ce0 <= ap_const_logic_1;
        else 
            ber_stats_cor_blerr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_cor_blerr_we0_assign_proc : process(tmp_24_reg_1313, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) and (ap_const_lv1_0 = tmp_24_reg_1313))) then 
            ber_stats_cor_blerr_we0 <= ap_const_logic_1;
        else 
            ber_stats_cor_blerr_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_iter_cnt_address0_assign_proc : process(tmp_16_reg_904, ap_CS_fsm_state45, ber_stats_iter_cnt_a_reg_1337, ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ber_stats_iter_cnt_address0 <= ber_stats_iter_cnt_a_reg_1337;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ber_stats_iter_cnt_address0 <= tmp_16_reg_904(5 - 1 downto 0);
        else 
            ber_stats_iter_cnt_address0 <= "XXXXX";
        end if; 
    end process;


    ber_stats_iter_cnt_ce0_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state48)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            ber_stats_iter_cnt_ce0 <= ap_const_logic_1;
        else 
            ber_stats_iter_cnt_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_iter_cnt_we0_assign_proc : process(ap_CS_fsm_state48)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            ber_stats_iter_cnt_we0 <= ap_const_logic_1;
        else 
            ber_stats_iter_cnt_we0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_raw_berr_address0_assign_proc : process(tmp_16_reg_904, ber_stats_raw_berr_a_reg_1283, ap_CS_fsm_state39, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ber_stats_raw_berr_address0 <= ber_stats_raw_berr_a_reg_1283;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            ber_stats_raw_berr_address0 <= tmp_16_reg_904(5 - 1 downto 0);
        else 
            ber_stats_raw_berr_address0 <= "XXXXX";
        end if; 
    end process;


    ber_stats_raw_berr_ce0_assign_proc : process(ap_CS_fsm_state39, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            ber_stats_raw_berr_ce0 <= ap_const_logic_1;
        else 
            ber_stats_raw_berr_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ber_stats_raw_berr_we0_assign_proc : process(ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            ber_stats_raw_berr_we0 <= ap_const_logic_1;
        else 
            ber_stats_raw_berr_we0 <= ap_const_logic_0;
        end if; 
    end process;

    block_def_cfg_address0 <= tmp_15_fu_527_p1(6 - 1 downto 0);

    block_def_cfg_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_def_cfg_ce0 <= ap_const_logic_1;
        else 
            block_def_cfg_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    block_def_cnt_address0 <= tmp_15_fu_527_p1(6 - 1 downto 0);

    block_def_cnt_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            block_def_cnt_ce0 <= ap_const_logic_1;
        else 
            block_def_cnt_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    def_cfg_1_fu_545_p3 <= 
        def_cfg_reg_883 when (tmp_s_reg_877(0) = '1') else 
        def_cfg_2_fu_164;
    def_cnt_1_fu_551_p3 <= 
        def_cnt_reg_888 when (tmp_s_reg_877(0) = '1') else 
        def_cnt_2_fu_160;
    def_i_1_fu_764_p2 <= std_logic_vector(unsigned(def_i_reg_332) + unsigned(ap_const_lv8_1));
    def_i_2_fu_817_p3 <= 
        p_s_fu_811_p3 when (tmp_28_reg_1364(0) = '1') else 
        def_i_reg_332;
    err_cnt_1_fu_710_p2 <= std_logic_vector(unsigned(err_cnt_1_trunc_ext_fu_706_p1) + unsigned(err_cnt_phi_fu_384_p4));
    err_cnt_1_trunc_ext_fu_706_p1 <= std_logic_vector(resize(unsigned(reg_518),32));

    err_cnt_phi_fu_384_p4_assign_proc : process(ap_CS_fsm_pp0_stage5, err_cnt_reg_380, ap_reg_pp0_iter2_tmp_17_reg_944, err_cnt_1_reg_1259, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_lv1_1 = ap_reg_pp0_iter2_tmp_17_reg_944) and (ap_const_logic_1 = ap_enable_reg_pp0_iter2))) then 
            err_cnt_phi_fu_384_p4 <= err_cnt_1_reg_1259;
        else 
            err_cnt_phi_fu_384_p4 <= err_cnt_reg_380;
        end if; 
    end process;

    error_bits_comp_V_7_fu_618_p66 <= ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((grp_fu_506_p3 & grp_fu_498_p3) & grp_fu_490_p3) & grp_fu_482_p3) & grp_fu_474_p3) & grp_fu_466_p3) & grp_fu_458_p3) & grp_fu_450_p3) & tmp_86_reg_1249) & tmp_85_reg_1244) & tmp_84_reg_1239) & tmp_83_reg_1234) & tmp_82_reg_1229) & tmp_81_reg_1224) & tmp_80_reg_1219) & tmp_79_reg_1214) & tmp_78_reg_1209) & tmp_77_reg_1204) & tmp_76_reg_1199) & tmp_75_reg_1194) & tmp_74_reg_1189) & tmp_73_reg_1184) & tmp_72_reg_1179) & tmp_71_reg_1174) & tmp_70_reg_1169) & tmp_69_reg_1164) & tmp_68_reg_1159) & tmp_67_reg_1154) & tmp_66_reg_1149) & tmp_65_reg_1144) & tmp_64_reg_1139) & tmp_63_reg_1134) & tmp_62_reg_1129) & tmp_61_reg_1124) & tmp_60_reg_1119) & tmp_59_reg_1114) & tmp_58_reg_1109) & tmp_57_reg_1104) & tmp_56_reg_1099) & tmp_55_reg_1094) & tmp_54_reg_1089) & tmp_53_reg_1084) & tmp_52_reg_1079) & tmp_51_reg_1074) & tmp_50_reg_1069) & tmp_49_reg_1064) & tmp_48_reg_1059) & tmp_47_reg_1054) & tmp_46_reg_1044) & tmp_45_reg_1039) & tmp_44_reg_1034) & tmp_43_reg_1029) & tmp_42_reg_1024) & tmp_41_reg_1019) & tmp_40_reg_1014) & tmp_39_reg_1009) & tmp_38_reg_989) & tmp_37_reg_984) & tmp_36_reg_979) & tmp_35_reg_974) & tmp_34_reg_969) & tmp_33_reg_964) & tmp_32_reg_959) & tmp_31_reg_954) & tmp_3_fu_608_p4);

    error_data_TDATA_blk_n_assign_proc : process(error_data_V_data_V_0_state, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, tmp_19_reg_1274)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1)) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_19_reg_1274)))) then 
            error_data_TDATA_blk_n <= error_data_V_data_V_0_state(0);
        else 
            error_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    error_data_TREADY <= error_data_V_last_V_0_state(1);
    error_data_V_data_V_0_ack_in <= error_data_V_data_V_0_state(1);

    error_data_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, tmp_19_reg_1274, ap_block_state11, ap_block_state15, ap_block_state8, ap_block_state9, ap_block_state10, ap_block_state12, ap_block_state13, ap_block_state14, ap_block_state38)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state10)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state11)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14)))) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15)))) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_19_reg_1274) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38)))))) then 
            error_data_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            error_data_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    error_data_V_data_V_0_data_out_assign_proc : process(error_data_V_data_V_0_payload_A, error_data_V_data_V_0_payload_B, error_data_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = error_data_V_data_V_0_sel)) then 
            error_data_V_data_V_0_data_out <= error_data_V_data_V_0_payload_B;
        else 
            error_data_V_data_V_0_data_out <= error_data_V_data_V_0_payload_A;
        end if; 
    end process;

    error_data_V_data_V_0_load_A <= (error_data_V_data_V_0_state_cmp_full and not(error_data_V_data_V_0_sel_wr));
    error_data_V_data_V_0_load_B <= (error_data_V_data_V_0_sel_wr and error_data_V_data_V_0_state_cmp_full);
    error_data_V_data_V_0_sel <= error_data_V_data_V_0_sel_rd;
    error_data_V_data_V_0_state_cmp_full <= '0' when (error_data_V_data_V_0_state = ap_const_lv2_1) else '1';
    error_data_V_data_V_0_vld_in <= error_data_TVALID;
    error_data_V_data_V_0_vld_out <= error_data_V_data_V_0_state(0);

    error_data_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter1, tmp_19_reg_1274, ap_block_state11, ap_block_state15, ap_block_state8, ap_block_state9, ap_block_state10, ap_block_state12, ap_block_state13, ap_block_state14, ap_block_state38)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state10)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state11)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13)))) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14)))) or ((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15)))) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_lv1_1 = tmp_19_reg_1274) and not(((ap_const_logic_1 = ap_enable_reg_pp2_iter1) and (ap_const_boolean_1 = ap_block_state38)))))) then 
            error_data_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            error_data_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;

    error_data_V_last_V_0_vld_in <= error_data_TVALID;
    fe_status_V_V_0_ack_in <= fe_status_V_V_0_state(1);

    fe_status_V_V_0_ack_out_assign_proc : process(fe_status_V_V_0_vld_out, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) and (fe_status_V_V_0_vld_out = ap_const_logic_1))) then 
            fe_status_V_V_0_ack_out <= ap_const_logic_1;
        else 
            fe_status_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    fe_status_V_V_0_data_out_assign_proc : process(fe_status_V_V_0_payload_A, fe_status_V_V_0_payload_B, fe_status_V_V_0_sel)
    begin
        if ((ap_const_logic_1 = fe_status_V_V_0_sel)) then 
            fe_status_V_V_0_data_out <= fe_status_V_V_0_payload_B;
        else 
            fe_status_V_V_0_data_out <= fe_status_V_V_0_payload_A;
        end if; 
    end process;

    fe_status_V_V_0_load_A <= (fe_status_V_V_0_state_cmp_full and not(fe_status_V_V_0_sel_wr));
    fe_status_V_V_0_load_B <= (fe_status_V_V_0_sel_wr and fe_status_V_V_0_state_cmp_full);
    fe_status_V_V_0_sel <= fe_status_V_V_0_sel_rd;
    fe_status_V_V_0_state_cmp_full <= '0' when (fe_status_V_V_0_state = ap_const_lv2_1) else '1';
    fe_status_V_V_0_vld_in <= fe_status_V_V_TVALID;
    fe_status_V_V_0_vld_out <= fe_status_V_V_0_state(0);

    fe_status_V_V_TDATA_blk_n_assign_proc : process(fe_status_V_V_0_state, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            fe_status_V_V_TDATA_blk_n <= fe_status_V_V_0_state(0);
        else 
            fe_status_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fe_status_V_V_TREADY <= fe_status_V_V_0_state(1);
    grp_fu_450_p3 <= error_data_V_data_V_0_data_out(7 downto 7);
    grp_fu_458_p3 <= error_data_V_data_V_0_data_out(15 downto 15);
    grp_fu_466_p3 <= error_data_V_data_V_0_data_out(23 downto 23);
    grp_fu_474_p3 <= error_data_V_data_V_0_data_out(31 downto 31);
    grp_fu_482_p3 <= error_data_V_data_V_0_data_out(39 downto 39);
    grp_fu_490_p3 <= error_data_V_data_V_0_data_out(47 downto 47);
    grp_fu_498_p3 <= error_data_V_data_V_0_data_out(55 downto 55);
    grp_fu_506_p3 <= error_data_V_data_V_0_data_out(63 downto 63);

    grp_num_diff_fu_437_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_state9_ignore_call95, ap_block_state10_ignore_call95, ap_block_state11_ignore_call95, ap_block_state12_ignore_call95, ap_block_state13_ignore_call95, ap_block_state14_ignore_call95, ap_block_state15_ignore_call95, ap_block_state8_ignore_call95)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state10_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state11_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state12_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state14_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state15_ignore_call95)))) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state8_ignore_call95)))))) then 
            grp_num_diff_fu_437_ap_ce <= ap_const_logic_1;
        else 
            grp_num_diff_fu_437_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_num_diff_fu_437_ap_start <= ap_reg_grp_num_diff_fu_437_ap_start;

    grp_num_diff_fu_437_in1_V_assign_proc : process(src_data_V_V_0_data_out, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_17_reg_944, ap_reg_pp0_iter1_tmp_V_reg_1004)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_17_reg_944))) then 
            grp_num_diff_fu_437_in1_V <= ap_reg_pp0_iter1_tmp_V_reg_1004;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944))) then 
            grp_num_diff_fu_437_in1_V <= src_data_V_V_0_data_out;
        else 
            grp_num_diff_fu_437_in1_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_num_diff_fu_437_in2_V_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp0_stage6, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_17_reg_944, p_2_reg_1254, hard_bits_V_fu_598_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_1 = ap_reg_pp0_iter1_tmp_17_reg_944))) then 
            grp_num_diff_fu_437_in2_V <= p_2_reg_1254;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944))) then 
            grp_num_diff_fu_437_in2_V <= hard_bits_V_fu_598_p2;
        else 
            grp_num_diff_fu_437_in2_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    hard_bits_V_fu_598_p2 <= (hard_data_V_data_V_0_data_out and r_V_fu_592_p3);

    hard_data_TDATA_blk_n_assign_proc : process(hard_data_V_data_V_0_state, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, hard_in_1_2_reg_416)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = hard_in_1_2_reg_416)))) then 
            hard_data_TDATA_blk_n <= hard_data_V_data_V_0_state(0);
        else 
            hard_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    hard_data_TREADY <= hard_data_V_last_V_0_state(1);
    hard_data_V_data_V_0_ack_in <= hard_data_V_data_V_0_state(1);

    hard_data_V_data_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, hard_in_1_2_reg_416, ap_block_state9, ap_block_state35)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9)))) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = hard_in_1_2_reg_416) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35)))))) then 
            hard_data_V_data_V_0_ack_out <= ap_const_logic_1;
        else 
            hard_data_V_data_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    hard_data_V_data_V_0_data_out_assign_proc : process(hard_data_V_data_V_0_payload_A, hard_data_V_data_V_0_payload_B, hard_data_V_data_V_0_sel)
    begin
        if ((ap_const_logic_1 = hard_data_V_data_V_0_sel)) then 
            hard_data_V_data_V_0_data_out <= hard_data_V_data_V_0_payload_B;
        else 
            hard_data_V_data_V_0_data_out <= hard_data_V_data_V_0_payload_A;
        end if; 
    end process;

    hard_data_V_data_V_0_load_A <= (hard_data_V_data_V_0_state_cmp_full and not(hard_data_V_data_V_0_sel_wr));
    hard_data_V_data_V_0_load_B <= (hard_data_V_data_V_0_sel_wr and hard_data_V_data_V_0_state_cmp_full);
    hard_data_V_data_V_0_sel <= hard_data_V_data_V_0_sel_rd;
    hard_data_V_data_V_0_state_cmp_full <= '0' when (hard_data_V_data_V_0_state = ap_const_lv2_1) else '1';
    hard_data_V_data_V_0_vld_in <= hard_data_TVALID;
    hard_data_V_data_V_0_vld_out <= hard_data_V_data_V_0_state(0);
    hard_data_V_last_V_0_ack_in <= hard_data_V_last_V_0_state(1);

    hard_data_V_last_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, hard_in_1_2_reg_416, ap_block_state9, ap_block_state35)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9)))) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = hard_in_1_2_reg_416) and not(((ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_boolean_1 = ap_block_state35)))))) then 
            hard_data_V_last_V_0_ack_out <= ap_const_logic_1;
        else 
            hard_data_V_last_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    hard_data_V_last_V_0_data_out_assign_proc : process(hard_data_V_last_V_0_payload_A, hard_data_V_last_V_0_payload_B, hard_data_V_last_V_0_sel)
    begin
        if ((ap_const_logic_1 = hard_data_V_last_V_0_sel)) then 
            hard_data_V_last_V_0_data_out <= hard_data_V_last_V_0_payload_B;
        else 
            hard_data_V_last_V_0_data_out <= hard_data_V_last_V_0_payload_A;
        end if; 
    end process;

    hard_data_V_last_V_0_load_A <= (hard_data_V_last_V_0_state_cmp_full and not(hard_data_V_last_V_0_sel_wr));
    hard_data_V_last_V_0_load_B <= (hard_data_V_last_V_0_sel_wr and hard_data_V_last_V_0_state_cmp_full);
    hard_data_V_last_V_0_sel <= hard_data_V_last_V_0_sel_rd;
    hard_data_V_last_V_0_state_cmp_full <= '0' when (hard_data_V_last_V_0_state = ap_const_lv2_1) else '1';
    hard_data_V_last_V_0_vld_in <= hard_data_TVALID;
    hard_data_V_last_V_0_vld_out <= hard_data_V_last_V_0_state(0);

    hard_in_1_2_phi_fu_419_p4_assign_proc : process(hard_data_V_last_V_0_data_out, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, hard_in_1_2_reg_416)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_enable_reg_pp1_iter1) and (ap_const_lv1_0 = hard_in_1_2_reg_416))) then 
            hard_in_1_2_phi_fu_419_p4 <= hard_data_V_last_V_0_data_out;
        else 
            hard_in_1_2_phi_fu_419_p4 <= hard_in_1_2_reg_416;
        end if; 
    end process;

    i_fu_578_p2 <= std_logic_vector(unsigned(j_phi_fu_408_p4) + unsigned(ap_const_lv32_80));
    j_1_fu_731_p2 <= std_logic_vector(unsigned(j1_reg_427) + unsigned(ap_const_lv32_10));

    j_phi_fu_408_p4_assign_proc : process(tmp_17_reg_944, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, j_reg_404, i_reg_948)
    begin
        if (((ap_const_lv1_1 = tmp_17_reg_944) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1))) then 
            j_phi_fu_408_p4 <= i_reg_948;
        else 
            j_phi_fu_408_p4 <= j_reg_404;
        end if; 
    end process;

    k_address0 <= tmp_16_fu_567_p1(5 - 1 downto 0);

    k_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            k_ce0 <= ap_const_logic_1;
        else 
            k_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mask_V_address0 <= tmp_16_fu_567_p1(5 - 1 downto 0);

    mask_V_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            mask_V_ce0 <= ap_const_logic_1;
        else 
            mask_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    n_address0 <= tmp_16_fu_567_p1(5 - 1 downto 0);

    n_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            n_ce0 <= ap_const_logic_1;
        else 
            n_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_2_fu_696_p2 <= (error_bits_comp_V_7_fu_618_p66 and r_V_reg_1049);
    p_Result_s_30_fu_802_p1 <= std_logic_vector(resize(unsigned(p_Result_s_fu_792_p4),32));
    p_Result_s_fu_792_p4 <= fe_status_V_V_0_data_out(23 downto 18);
    p_s_fu_811_p3 <= 
        ap_const_lv8_0 when (tmp_30_reg_1376(0) = '1') else 
        def_i_1_reg_1348;
    r_V_fu_592_p3 <= 
        ap_const_lv128_lc_1 when (tmp_18_reg_994(0) = '1') else 
        mask_int_V_reg_939;
    rerr_cnt_1_fu_720_p2 <= std_logic_vector(unsigned(rerr_cnt_1_trunc_ext_fu_716_p1) + unsigned(rerr_cnt_reg_392));
    rerr_cnt_1_trunc_ext_fu_716_p1 <= std_logic_vector(resize(unsigned(reg_518),32));
    src_data_V_V_0_ack_in <= src_data_V_V_0_state(1);

    src_data_V_V_0_ack_out_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944, ap_block_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state9))))) then 
            src_data_V_V_0_ack_out <= ap_const_logic_1;
        else 
            src_data_V_V_0_ack_out <= ap_const_logic_0;
        end if; 
    end process;


    src_data_V_V_0_data_out_assign_proc : process(src_data_V_V_0_payload_A, src_data_V_V_0_payload_B, src_data_V_V_0_sel)
    begin
        if ((ap_const_logic_1 = src_data_V_V_0_sel)) then 
            src_data_V_V_0_data_out <= src_data_V_V_0_payload_B;
        else 
            src_data_V_V_0_data_out <= src_data_V_V_0_payload_A;
        end if; 
    end process;

    src_data_V_V_0_load_A <= (src_data_V_V_0_state_cmp_full and not(src_data_V_V_0_sel_wr));
    src_data_V_V_0_load_B <= (src_data_V_V_0_sel_wr and src_data_V_V_0_state_cmp_full);
    src_data_V_V_0_sel <= src_data_V_V_0_sel_rd;
    src_data_V_V_0_state_cmp_full <= '0' when (src_data_V_V_0_state = ap_const_lv2_1) else '1';
    src_data_V_V_0_vld_in <= src_data_V_V_TVALID;
    src_data_V_V_0_vld_out <= src_data_V_V_0_state(0);

    src_data_V_V_TDATA_blk_n_assign_proc : process(src_data_V_V_0_state, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0, tmp_17_reg_944)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_lv1_1 = tmp_17_reg_944))) then 
            src_data_V_V_TDATA_blk_n <= src_data_V_V_0_state(0);
        else 
            src_data_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    src_data_V_V_TREADY <= src_data_V_V_0_state(1);
    tmp_15_fu_527_p1 <= std_logic_vector(resize(unsigned(def_i_reg_332),64));
    tmp_16_fu_567_p1 <= std_logic_vector(resize(unsigned(def_cfg_1_reg_893),64));
    tmp_17_fu_573_p2 <= "1" when (unsigned(j_phi_fu_408_p4) < unsigned(k_int_reg_933)) else "0";
    tmp_18_fu_584_p2 <= "1" when (unsigned(i_reg_948) < unsigned(k_int_reg_933)) else "0";
    tmp_19_fu_726_p2 <= "1" when (unsigned(j1_reg_427) < unsigned(n_int_reg_928)) else "0";
    tmp_22_fu_737_p2 <= std_logic_vector(unsigned(ber_stats_raw_berr_l_reg_1293) + unsigned(rerr_cnt_reg_392));
    tmp_23_fu_742_p2 <= std_logic_vector(unsigned(ber_stats_cor_berr_l_reg_1298) + unsigned(err_cnt_reg_380));
    tmp_24_fu_747_p2 <= "1" when (err_cnt_reg_380 = ap_const_lv32_0) else "0";
    tmp_25_fu_753_p2 <= std_logic_vector(unsigned(ber_stats_cor_blerr_1_reg_1322) + unsigned(ap_const_lv32_1));
    tmp_26_fu_787_p2 <= std_logic_vector(unsigned(ber_stats_block_cnt_1_reg_1354) + unsigned(ap_const_lv32_1));
    tmp_27_fu_806_p2 <= std_logic_vector(unsigned(ber_stats_iter_cnt_l_reg_1359) + unsigned(p_Result_s_30_fu_802_p1));
    tmp_28_fu_770_p2 <= "1" when (b_i_2_reg_1342 = def_cnt_1_reg_898) else "0";
    tmp_29_fu_779_p1 <= std_logic_vector(resize(unsigned(def_i_1_reg_1348),32));
    tmp_30_fu_782_p2 <= "1" when (tmp_29_fu_779_p1 = num_defs_read_reg_859) else "0";
    tmp_3_fu_608_p4 <= p_0181_s_fu_168(127 downto 64);
    tmp_fu_522_p2 <= "1" when (unsigned(total_blocks_reg_356) < unsigned(num_blocks_read_reg_854)) else "0";
    tmp_s_fu_533_p2 <= "1" when (b_i_reg_344 = ap_const_lv32_0) else "0";
    total_blocks_1_fu_830_p3 <= 
        total_blocks_2_reg_1371 when (tmp_28_reg_1364(0) = '1') else 
        total_blocks_reg_356;
    total_blocks_2_fu_774_p2 <= std_logic_vector(unsigned(def_cnt_1_reg_898) + unsigned(total_blocks_reg_356));
end behav;
