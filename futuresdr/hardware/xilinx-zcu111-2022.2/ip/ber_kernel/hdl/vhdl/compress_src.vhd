-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity compress_src is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    k_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    k_empty_n : IN STD_LOGIC;
    k_read : OUT STD_LOGIC;
    src_data_i_V_dout : IN STD_LOGIC;
    src_data_i_V_empty_n : IN STD_LOGIC;
    src_data_i_V_read : OUT STD_LOGIC;
    src_data_V_V_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    src_data_V_V_TVALID : OUT STD_LOGIC;
    src_data_V_V_TREADY : IN STD_LOGIC );
end;


architecture behav of compress_src is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv128_lc_3 : STD_LOGIC_VECTOR (127 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_7F : STD_LOGIC_VECTOR (15 downto 0) := "0000000001111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv16_80 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal k_blk_n : STD_LOGIC;
    signal src_data_i_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal exitcond_i_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_data_V_V_TDATA_blk_n : STD_LOGIC;
    signal tmp_i_reg_265 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_i_72_reg_274 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_107 : STD_LOGIC_VECTOR (127 downto 0);
    signal i_i_reg_119 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_read_reg_245 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal h_i_2_load_reg_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_sig_ioackin_src_data_V_V_TREADY : STD_LOGIC;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_state3 : BOOLEAN;
    signal exitcond_i_fu_157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_162_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_i_fu_168_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_word_V_fu_195_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_i_72_fu_204_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_Result_i_73_reg_278 : STD_LOGIC_VECTOR (126 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal h_i_1_fu_219_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_i_1_reg_283 : STD_LOGIC_VECTOR (15 downto 0);
    signal src_word_V_1_fu_225_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_predicate_op48_write_state6 : BOOLEAN;
    signal ap_block_state6_io : BOOLEAN;
    signal p_Val2_1_reg_130 : STD_LOGIC_VECTOR (127 downto 0);
    signal h_i_2_i_reg_140 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_i_2_fu_84 : STD_LOGIC_VECTOR (15 downto 0);
    signal h_i_fu_174_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_reg_ioackin_src_data_V_V_TREADY : STD_LOGIC := '0';
    signal src_word_V_fu_195_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_i_fu_185_p4 : STD_LOGIC_VECTOR (126 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_block_state6_io = ap_const_boolean_0) and ((ap_const_lv1_1 = tmp_28_i_fu_233_p2) or (ap_const_lv1_1 = tmp_i_72_reg_274)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_1 = exitcond_i_fu_157_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and not((ap_const_lv1_1 = exitcond_i_fu_157_p2)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_1 = exitcond_i_fu_157_p2)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_src_data_V_V_TREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_src_data_V_V_TREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_i_reg_265 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3))))) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_1 = ap_predicate_op48_write_state6) and (ap_block_state6_io = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_src_data_V_V_TREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_i_reg_265 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_1 = src_data_V_V_TREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_1 = ap_predicate_op48_write_state6) and (ap_const_logic_1 = src_data_V_V_TREADY)))) then 
                    ap_reg_ioackin_src_data_V_V_TREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    h_i_2_fu_84_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_0 = exitcond_i_fu_157_p2) and (ap_const_lv1_0 = tmp_i_fu_168_p2))) then 
                h_i_2_fu_84 <= h_i_fu_174_p2;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_0 = exitcond_i_fu_157_p2) and (ap_const_lv1_1 = tmp_i_fu_168_p2)))) then 
                h_i_2_fu_84 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    h_i_2_i_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_i_72_fu_204_p2))) then 
                h_i_2_i_reg_140 <= h_i_2_load_reg_250;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_i_72_reg_274) and (ap_block_state6_io = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_28_i_fu_233_p2))) then 
                h_i_2_i_reg_140 <= h_i_1_reg_283;
            end if; 
        end if;
    end process;

    i_i_reg_119_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_0 = exitcond_i_fu_157_p2))) then 
                i_i_reg_119 <= i_fu_162_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0))) then 
                i_i_reg_119 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    p_Val2_1_reg_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_lv1_0 = tmp_i_72_fu_204_p2))) then 
                p_Val2_1_reg_130 <= p_Val2_s_reg_107;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_i_72_reg_274) and (ap_block_state6_io = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_28_i_fu_233_p2))) then 
                p_Val2_1_reg_130 <= src_word_V_1_fu_225_p3;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_107_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_256 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))))) then 
                p_Val2_s_reg_107 <= src_word_V_fu_195_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0))) then 
                p_Val2_s_reg_107 <= ap_const_lv128_lc_3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))))) then
                exitcond_i_reg_256 <= exitcond_i_fu_157_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                h_i_1_reg_283 <= h_i_1_fu_219_p2;
                p_Result_i_73_reg_278 <= p_Val2_1_reg_130(127 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))))) then
                h_i_2_load_reg_250 <= h_i_2_fu_84;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0))) then
                k_read_reg_245 <= k_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                tmp_i_72_reg_274 <= tmp_i_72_fu_204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_0 = exitcond_i_fu_157_p2))) then
                tmp_i_reg_265 <= tmp_i_fu_168_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_enable_reg_pp0_iter1, tmp_i_72_reg_274, tmp_28_i_fu_233_p2, ap_block_state1, ap_enable_reg_pp0_iter0, ap_block_state3_io, ap_block_state3, exitcond_i_fu_157_p2, tmp_i_72_fu_204_p2, ap_block_state6_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((ap_block_state1 = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_1 = exitcond_i_fu_157_p2)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))) and (ap_const_lv1_1 = exitcond_i_fu_157_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                if ((ap_const_lv1_0 = tmp_i_72_fu_204_p2)) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_block_state6_io = ap_const_boolean_0) and ((ap_const_lv1_1 = tmp_28_i_fu_233_p2) or (ap_const_lv1_1 = tmp_i_72_reg_274)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_lv1_0 = tmp_i_72_reg_274) and (ap_block_state6_io = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_28_i_fu_233_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, k_empty_n)
    begin
                ap_block_state1 <= ((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1) or (ap_const_logic_0 = k_empty_n));
    end process;


    ap_block_state3_assign_proc : process(src_data_i_V_empty_n, exitcond_i_reg_256)
    begin
                ap_block_state3 <= ((exitcond_i_reg_256 = ap_const_lv1_0) and (ap_const_logic_0 = src_data_i_V_empty_n));
    end process;


    ap_block_state3_io_assign_proc : process(tmp_i_reg_265, ap_sig_ioackin_src_data_V_V_TREADY)
    begin
                ap_block_state3_io <= ((tmp_i_reg_265 = ap_const_lv1_1) and (ap_const_logic_0 = ap_sig_ioackin_src_data_V_V_TREADY));
    end process;


    ap_block_state6_io_assign_proc : process(ap_sig_ioackin_src_data_V_V_TREADY, ap_predicate_op48_write_state6)
    begin
                ap_block_state6_io <= ((ap_const_logic_0 = ap_sig_ioackin_src_data_V_V_TREADY) and (ap_const_boolean_1 = ap_predicate_op48_write_state6));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6, tmp_i_72_reg_274, tmp_28_i_fu_233_p2, ap_block_state6_io)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_block_state6_io = ap_const_boolean_0) and ((ap_const_lv1_1 = tmp_28_i_fu_233_p2) or (ap_const_lv1_1 = tmp_i_72_reg_274))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op48_write_state6_assign_proc : process(tmp_i_72_reg_274, tmp_28_i_fu_233_p2)
    begin
                ap_predicate_op48_write_state6 <= ((ap_const_lv1_0 = tmp_i_72_reg_274) and (ap_const_lv1_1 = tmp_28_i_fu_233_p2));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6, tmp_i_72_reg_274, tmp_28_i_fu_233_p2, ap_block_state6_io)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_block_state6_io = ap_const_boolean_0) and ((ap_const_lv1_1 = tmp_28_i_fu_233_p2) or (ap_const_lv1_1 = tmp_i_72_reg_274)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_src_data_V_V_TREADY_assign_proc : process(src_data_V_V_TREADY, ap_reg_ioackin_src_data_V_V_TREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_src_data_V_V_TREADY)) then 
            ap_sig_ioackin_src_data_V_V_TREADY <= src_data_V_V_TREADY;
        else 
            ap_sig_ioackin_src_data_V_V_TREADY <= ap_const_logic_1;
        end if; 
    end process;

    exitcond_i_fu_157_p2 <= "1" when (i_i_reg_119 = k_read_reg_245) else "0";
    h_i_1_fu_219_p2 <= std_logic_vector(unsigned(h_i_2_i_reg_140) + unsigned(ap_const_lv16_1));
    h_i_fu_174_p2 <= std_logic_vector(unsigned(h_i_2_fu_84) + unsigned(ap_const_lv16_1));
    i_fu_162_p2 <= std_logic_vector(unsigned(i_i_reg_119) + unsigned(ap_const_lv32_1));

    k_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, k_empty_n)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and not(((ap_const_logic_0 = ap_start) or (ap_done_reg = ap_const_logic_1))))) then 
            k_blk_n <= k_empty_n;
        else 
            k_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    k_read_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_block_state1 = ap_const_boolean_0))) then 
            k_read <= ap_const_logic_1;
        else 
            k_read <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_i_fu_185_p4 <= p_Val2_s_reg_107(127 downto 1);

    src_data_V_V_TDATA_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_i_reg_265, ap_CS_fsm_state6, ap_block_state3, src_word_V_fu_195_p3, src_word_V_1_fu_225_p3, ap_predicate_op48_write_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_1 = ap_predicate_op48_write_state6))) then 
            src_data_V_V_TDATA <= src_word_V_1_fu_225_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_i_reg_265 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state3))))) then 
            src_data_V_V_TDATA <= src_word_V_fu_195_p3;
        else 
            src_data_V_V_TDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    src_data_V_V_TDATA_blk_n_assign_proc : process(src_data_V_V_TREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_i_reg_265, ap_CS_fsm_state6, tmp_i_72_reg_274, tmp_28_i_fu_233_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_i_reg_265 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_lv1_0 = tmp_i_72_reg_274) and (ap_const_lv1_1 = tmp_28_i_fu_233_p2)))) then 
            src_data_V_V_TDATA_blk_n <= src_data_V_V_TREADY;
        else 
            src_data_V_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_V_V_TVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_i_reg_265, ap_CS_fsm_state6, ap_block_state3, ap_predicate_op48_write_state6, ap_reg_ioackin_src_data_V_V_TREADY)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (tmp_i_reg_265 = ap_const_lv1_1) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state3))) and (ap_const_logic_0 = ap_reg_ioackin_src_data_V_V_TREADY)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_1 = ap_predicate_op48_write_state6) and (ap_const_logic_0 = ap_reg_ioackin_src_data_V_V_TREADY)))) then 
            src_data_V_V_TVALID <= ap_const_logic_1;
        else 
            src_data_V_V_TVALID <= ap_const_logic_0;
        end if; 
    end process;


    src_data_i_V_blk_n_assign_proc : process(src_data_i_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_256)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_256 = ap_const_lv1_0))) then 
            src_data_i_V_blk_n <= src_data_i_V_empty_n;
        else 
            src_data_i_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    src_data_i_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, exitcond_i_reg_256, ap_block_state3_io, ap_block_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (exitcond_i_reg_256 = ap_const_lv1_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and ((ap_const_boolean_1 = ap_block_state3_io) or (ap_const_boolean_1 = ap_block_state3)))))) then 
            src_data_i_V_read <= ap_const_logic_1;
        else 
            src_data_i_V_read <= ap_const_logic_0;
        end if; 
    end process;

    src_word_V_1_fu_225_p3 <= (ap_const_lv1_0 & p_Result_i_73_reg_278);
    src_word_V_fu_195_p1 <= (0=>src_data_i_V_dout, others=>'-');
    src_word_V_fu_195_p3 <= (src_word_V_fu_195_p1 & p_Result_i_fu_185_p4);
    tmp_28_i_fu_233_p2 <= "1" when (h_i_1_reg_283 = ap_const_lv16_80) else "0";
    tmp_i_72_fu_204_p2 <= "1" when (h_i_2_load_reg_250 = ap_const_lv16_0) else "0";
    tmp_i_fu_168_p2 <= "1" when (h_i_2_fu_84 = ap_const_lv16_7F) else "0";
end behav;
