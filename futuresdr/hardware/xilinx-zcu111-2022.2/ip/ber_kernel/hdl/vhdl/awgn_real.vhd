-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity awgn_real is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    snr_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (17 downto 0) );
end;


architecture behav of awgn_real is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv128_lc_1 : STD_LOGIC_VECTOR (127 downto 0) := "00000001001000110100010101100111100010011010101111001101111011110001001000110100010101100111100010011010101111001101111011110001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_5D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011101";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_76 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110110";
    constant ap_const_lv32_75 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110101";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_69 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101001";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv58_0 : STD_LOGIC_VECTOR (57 downto 0) := "0000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv15_4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv9_180 : STD_LOGIC_VECTOR (8 downto 0) := "110000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv9_40 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_20 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv49_4000000 : STD_LOGIC_VECTOR (48 downto 0) := "0000000000000000000000100000000000000000000000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv21_1E0001 : STD_LOGIC_VECTOR (20 downto 0) := "111100000000000000001";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20001 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal chan_real_noise_lfsr : STD_LOGIC_VECTOR (127 downto 0) := "00000001001000110100010101100111100010011010101111001101111011110001001000110100010101100111100010011010101111001101111011110001";
    signal coarseContents308_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents308_ce0 : STD_LOGIC;
    signal coarseContents308_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents308_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents308_ce1 : STD_LOGIC;
    signal coarseContents308_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents308_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents308_ce2 : STD_LOGIC;
    signal coarseContents308_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal coarseContents308_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal coarseContents308_ce3 : STD_LOGIC;
    signal coarseContents308_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce0 : STD_LOGIC;
    signal gradientContents_q0 : STD_LOGIC_VECTOR (12 downto 0);
    signal gradientContents_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce1 : STD_LOGIC;
    signal gradientContents_q1 : STD_LOGIC_VECTOR (12 downto 0);
    signal gradientContents_address2 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce2 : STD_LOGIC;
    signal gradientContents_q2 : STD_LOGIC_VECTOR (12 downto 0);
    signal gradientContents_address3 : STD_LOGIC_VECTOR (8 downto 0);
    signal gradientContents_ce3 : STD_LOGIC;
    signal gradientContents_q3 : STD_LOGIC_VECTOR (12 downto 0);
    signal scaleLookup_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal scaleLookup_ce0 : STD_LOGIC;
    signal scaleLookup_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter1_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter2_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter3_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter4_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter5_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter6_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter7_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter8_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter9_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter10_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_pp0_iter11_snr_V_read_reg_1614 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter1_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter2_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter3_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter4_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter5_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter6_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter7_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter8_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter9_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter10_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter11_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_reg_pp0_iter12_p_Val2_s_reg_1619 : STD_LOGIC_VECTOR (127 downto 0);
    signal icmp_fu_320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_icmp_reg_1627 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_0_1_fu_344_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_0_1_reg_1633 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_56_reg_1639 : STD_LOGIC_VECTOR (3 downto 0);
    signal phitmp6128_i_reg_1644 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_phitmp6128_i_reg_1644 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_phitmp6128_i_reg_1644 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_69_fu_372_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_69_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter1_tmp_69_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter2_tmp_69_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter3_tmp_69_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter4_tmp_69_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter5_tmp_69_reg_1649 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp3_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp3_reg_1654 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_icmp3_reg_1654 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_1_1_fu_420_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_1_1_reg_1660 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_72_reg_1666 : STD_LOGIC_VECTOR (3 downto 0);
    signal phitmp6128_i_1_reg_1671 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_phitmp6128_i_1_reg_1671 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_phitmp6128_i_1_reg_1671 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter1_tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter2_tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter3_tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter4_tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter5_tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter6_tmp_106_1_reg_1676 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp6_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp6_reg_1681 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_icmp6_reg_1681 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_2_1_fu_502_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_2_1_reg_1687 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_81_reg_1693 : STD_LOGIC_VECTOR (3 downto 0);
    signal phitmp6128_i_2_reg_1698 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_phitmp6128_i_2_reg_1698 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_phitmp6128_i_2_reg_1698 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_106_2_reg_1703 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter1_tmp_106_2_reg_1703 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter2_tmp_106_2_reg_1703 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter3_tmp_106_2_reg_1703 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter4_tmp_106_2_reg_1703 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter5_tmp_106_2_reg_1703 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp9_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp9_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_icmp9_reg_1708 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_3_1_fu_584_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_3_1_reg_1714 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_90_reg_1720 : STD_LOGIC_VECTOR (3 downto 0);
    signal phitmp6128_i_3_reg_1725 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter1_phitmp6128_i_3_reg_1725 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter2_phitmp6128_i_3_reg_1725 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter1_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter2_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter3_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter4_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter5_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter6_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_reg_pp0_iter7_tmp_106_3_reg_1730 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp1_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp1_reg_1735 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_0_2_fu_766_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_0_2_reg_1740 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_61_reg_1746 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp4_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp4_reg_1751 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_1_2_fu_793_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_1_2_reg_1756 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_74_reg_1762 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp7_fu_810_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp7_reg_1767 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_2_2_fu_820_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_2_2_reg_1772 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_83_reg_1778 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp10_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp10_reg_1783 : STD_LOGIC_VECTOR (0 downto 0);
    signal norm_V_load_3_3_2_fu_847_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal norm_V_load_3_3_2_reg_1788 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_92_reg_1794 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_68_fu_940_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_68_reg_1799 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_19_reg_1804 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter3_tmp_19_reg_1804 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_78_fu_1030_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_78_reg_1809 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_30_reg_1814 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter3_tmp_30_reg_1814 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_tmp_30_reg_1814 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_1120_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_87_reg_1819 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_33_reg_1824 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter3_tmp_33_reg_1824 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_96_fu_1210_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_96_reg_1829 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_36_reg_1834 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter3_tmp_36_reg_1834 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter4_tmp_36_reg_1834 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_reg_pp0_iter5_tmp_36_reg_1834 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_17_fu_1224_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_reg_1839 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_29_fu_1228_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_29_reg_1844 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_29_reg_1844 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_32_fu_1232_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_32_reg_1849 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_35_fu_1236_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_35_reg_1854 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter4_tmp_35_reg_1854 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_reg_pp0_iter5_tmp_35_reg_1854 : STD_LOGIC_VECTOR (4 downto 0);
    signal coarseContents308_lo_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter6_coarseContents308_lo_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter7_coarseContents308_lo_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter8_coarseContents308_lo_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter9_coarseContents308_lo_reg_1879 : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_reg_1884 : STD_LOGIC_VECTOR (12 downto 0);
    signal coarseContents308_lo_2_reg_1899 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter6_coarseContents308_lo_2_reg_1899 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter7_coarseContents308_lo_2_reg_1899 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter8_coarseContents308_lo_2_reg_1899 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter9_coarseContents308_lo_2_reg_1899 : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_2_reg_1904 : STD_LOGIC_VECTOR (12 downto 0);
    signal coarseContents308_lo_1_reg_1919 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter7_coarseContents308_lo_1_reg_1919 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter8_coarseContents308_lo_1_reg_1919 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter9_coarseContents308_lo_1_reg_1919 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter10_coarseContents308_lo_1_reg_1919 : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_1_reg_1924 : STD_LOGIC_VECTOR (12 downto 0);
    signal coarseContents308_lo_3_reg_1959 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter8_coarseContents308_lo_3_reg_1959 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter9_coarseContents308_lo_3_reg_1959 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter10_coarseContents308_lo_3_reg_1959 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_reg_pp0_iter11_coarseContents308_lo_3_reg_1959 : STD_LOGIC_VECTOR (16 downto 0);
    signal gradientContents_loa_3_reg_1964 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1590_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_s_reg_1979 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1596_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_22_2_reg_1984 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_22_fu_1326_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_22_reg_1989 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_fu_1332_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_reg_1994 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1602_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_22_1_reg_1999 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_114_2_fu_1352_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_114_2_reg_2004 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_2_fu_1358_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_2_reg_2009 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_114_1_fu_1391_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_114_1_reg_2014 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_1_fu_1397_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_1_reg_2019 : STD_LOGIC_VECTOR (28 downto 0);
    signal grp_fu_1608_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal r_V_22_3_reg_2024 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_1424_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_reg_2029 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_114_3_fu_1457_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_114_3_reg_2034 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_3_fu_1463_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal addconv_i_3_reg_2039 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_23_fu_1473_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_23_reg_2044 : STD_LOGIC_VECTOR (29 downto 0);
    signal centralLimitNoise_V_fu_1502_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal centralLimitNoise_V_reg_2054 : STD_LOGIC_VECTOR (30 downto 0);
    signal scale_V_reg_2059 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_1514_p2 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_27_reg_2074 : STD_LOGIC_VECTOR (47 downto 0);
    signal r_V_fu_1523_p2 : STD_LOGIC_VECTOR (48 downto 0);
    signal r_V_reg_2079 : STD_LOGIC_VECTOR (48 downto 0);
    signal roundedNoise_V_reg_2084 : STD_LOGIC_VECTOR (20 downto 0);
    signal tmp_101_reg_2089 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_20_fu_1246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_2_fu_1258_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_1_fu_1270_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_107_3_fu_1294_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_24_fu_1478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_742_p3 : STD_LOGIC_VECTOR (127 downto 0);
    signal tmp_55_fu_310_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_326_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_16_fu_336_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6131_i_fu_300_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_71_fu_386_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_402_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_134_1_fu_412_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6131_i_1_fu_376_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_80_fu_468_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_484_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_134_2_fu_494_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6131_i_2_fu_458_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_89_fu_550_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_566_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_134_3_fu_576_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal phitmp6131_i_3_fu_540_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_37_fu_636_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal r_V_15_fu_646_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_fu_622_p4 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_16_fu_654_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_4_fu_660_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_17_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_18_fu_674_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_19_fu_680_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_99_fu_692_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal r_V_21_fu_696_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_V_3_fu_632_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_22_fu_704_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_10_fu_710_p4 : STD_LOGIC_VECTOR (50 downto 0);
    signal r_V_23_fu_720_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_24_fu_724_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_25_fu_730_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_20_fu_686_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal r_V_26_fu_736_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_60_fu_761_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_73_fu_788_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_82_fu_815_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_91_fu_842_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal bramChapter_V_load_1_fu_864_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_136_0_s_fu_871_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_1_fu_878_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp2_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_0_1_fu_890_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_62_fu_904_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_911_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_1_2_fu_896_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_67_fu_918_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_0_3_fu_926_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_fu_932_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_3_fu_954_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_136_1_s_fu_961_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_4_fu_968_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp5_fu_975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_1_1_fu_980_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_75_fu_994_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_1001_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_1_5_fu_986_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_77_fu_1008_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_1_3_fu_1016_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_s_fu_1022_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_6_fu_1044_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_136_2_s_fu_1051_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_7_fu_1058_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp8_fu_1065_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_2_1_fu_1070_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_84_fu_1084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_85_fu_1091_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_1_8_fu_1076_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_86_fu_1098_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_2_3_fu_1106_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_2_fu_1112_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_9_fu_1134_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_136_3_s_fu_1141_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_1_11_fu_1148_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp11_fu_1155_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_3_1_fu_1160_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_93_fu_1174_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_94_fu_1181_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal bramChapter_V_load_1_10_fu_1166_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_95_fu_1188_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_136_3_3_fu_1196_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal bramChapter_V_load_3_fu_1202_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_18_fu_1240_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_105_2_fu_1252_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_105_1_fu_1264_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_105_3_fu_1288_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_1_fu_1315_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_21_fu_1312_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_23_cast_fu_1322_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_23_2_fu_1341_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_108_2_fu_1338_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_23_2_cast_fu_1348_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_54_fu_1364_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_23_1_fu_1380_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_108_1_fu_1377_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_23_1_cast_fu_1387_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_79_fu_1403_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal noiseGen_V_load_fu_1371_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal noiseGen_V_load_2_fu_1410_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_cast_fu_1420_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_0202_0_i_cast_fu_1416_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_70_fu_1430_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_23_3_fu_1446_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_108_3_fu_1443_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal r_V_23_3_cast_fu_1453_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal noiseGen_V_load_1_fu_1437_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_0210_0_i_cast_fu_1469_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_88_fu_1482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal noiseGen_V_load_3_fu_1489_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_s_fu_1495_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_69_cast_fu_1499_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1514_p0 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_25_fu_1520_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal icmp12_fu_1549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal saturatedNoise_V_1_fu_1568_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal saturatedNoise_V_fu_1559_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1590_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1596_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1602_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1608_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_1514_ce : STD_LOGIC;
    signal grp_fu_1590_ce : STD_LOGIC;
    signal grp_fu_1596_ce : STD_LOGIC;
    signal grp_fu_1602_ce : STD_LOGIC;
    signal grp_fu_1608_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to19 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1514_p00 : STD_LOGIC_VECTOR (47 downto 0);
    signal grp_fu_1590_p10 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1596_p10 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1602_p10 : STD_LOGIC_VECTOR (22 downto 0);
    signal grp_fu_1608_p10 : STD_LOGIC_VECTOR (22 downto 0);

    component ber_kernel_mul_17mb6 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (16 downto 0);
        din1 : IN STD_LOGIC_VECTOR (30 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (47 downto 0) );
    end component;


    component ber_kernel_mul_muncg IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component awgn_real_coarseCjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component awgn_real_gradienkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address2 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (12 downto 0);
        address3 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component awgn_real_scaleLolbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;



begin
    coarseContents308_U : component awgn_real_coarseCjbC
    generic map (
        DataWidth => 17,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => coarseContents308_address0,
        ce0 => coarseContents308_ce0,
        q0 => coarseContents308_q0,
        address1 => coarseContents308_address1,
        ce1 => coarseContents308_ce1,
        q1 => coarseContents308_q1,
        address2 => coarseContents308_address2,
        ce2 => coarseContents308_ce2,
        q2 => coarseContents308_q2,
        address3 => coarseContents308_address3,
        ce3 => coarseContents308_ce3,
        q3 => coarseContents308_q3);

    gradientContents_U : component awgn_real_gradienkbM
    generic map (
        DataWidth => 13,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gradientContents_address0,
        ce0 => gradientContents_ce0,
        q0 => gradientContents_q0,
        address1 => gradientContents_address1,
        ce1 => gradientContents_ce1,
        q1 => gradientContents_q1,
        address2 => gradientContents_address2,
        ce2 => gradientContents_ce2,
        q2 => gradientContents_q2,
        address3 => gradientContents_address3,
        ce3 => gradientContents_ce3,
        q3 => gradientContents_q3);

    scaleLookup_U : component awgn_real_scaleLolbW
    generic map (
        DataWidth => 17,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => scaleLookup_address0,
        ce0 => scaleLookup_ce0,
        q0 => scaleLookup_q0);

    ber_kernel_mul_17mb6_U70 : component ber_kernel_mul_17mb6
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 17,
        din1_WIDTH => 31,
        dout_WIDTH => 48)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1514_p0,
        din1 => centralLimitNoise_V_reg_2054,
        ce => grp_fu_1514_ce,
        dout => grp_fu_1514_p2);

    ber_kernel_mul_muncg_U71 : component ber_kernel_mul_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter5_tmp_69_reg_1649,
        din1 => grp_fu_1590_p1,
        ce => grp_fu_1590_ce,
        dout => grp_fu_1590_p2);

    ber_kernel_mul_muncg_U72 : component ber_kernel_mul_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter5_tmp_106_2_reg_1703,
        din1 => grp_fu_1596_p1,
        ce => grp_fu_1596_ce,
        dout => grp_fu_1596_p2);

    ber_kernel_mul_muncg_U73 : component ber_kernel_mul_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter6_tmp_106_1_reg_1676,
        din1 => grp_fu_1602_p1,
        ce => grp_fu_1602_ce,
        dout => grp_fu_1602_p2);

    ber_kernel_mul_muncg_U74 : component ber_kernel_mul_muncg
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 13,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_reg_pp0_iter7_tmp_106_3_reg_1730,
        din1 => grp_fu_1608_p1,
        ce => grp_fu_1608_ce,
        dout => grp_fu_1608_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0))))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (not((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (ap_ce = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    chan_real_noise_lfsr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                chan_real_noise_lfsr <= ap_const_lv128_lc_1;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1))) then 
                    chan_real_noise_lfsr <= p_Result_s_fu_742_p3;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1))) then
                addconv_i_1_reg_2019 <= addconv_i_1_fu_1397_p2;
                addconv_i_2_reg_2009 <= addconv_i_2_fu_1358_p2;
                addconv_i_3_reg_2039 <= addconv_i_3_fu_1463_p2;
                addconv_i_reg_1994 <= addconv_i_fu_1332_p2;
                ap_reg_pp0_iter10_coarseContents308_lo_1_reg_1919 <= ap_reg_pp0_iter9_coarseContents308_lo_1_reg_1919;
                ap_reg_pp0_iter10_coarseContents308_lo_3_reg_1959 <= ap_reg_pp0_iter9_coarseContents308_lo_3_reg_1959;
                ap_reg_pp0_iter10_p_Val2_s_reg_1619 <= ap_reg_pp0_iter9_p_Val2_s_reg_1619;
                ap_reg_pp0_iter10_snr_V_read_reg_1614 <= ap_reg_pp0_iter9_snr_V_read_reg_1614;
                ap_reg_pp0_iter11_coarseContents308_lo_3_reg_1959 <= ap_reg_pp0_iter10_coarseContents308_lo_3_reg_1959;
                ap_reg_pp0_iter11_p_Val2_s_reg_1619 <= ap_reg_pp0_iter10_p_Val2_s_reg_1619;
                ap_reg_pp0_iter11_snr_V_read_reg_1614 <= ap_reg_pp0_iter10_snr_V_read_reg_1614;
                ap_reg_pp0_iter12_p_Val2_s_reg_1619 <= ap_reg_pp0_iter11_p_Val2_s_reg_1619;
                ap_reg_pp0_iter2_p_Val2_s_reg_1619 <= ap_reg_pp0_iter1_p_Val2_s_reg_1619;
                ap_reg_pp0_iter2_phitmp6128_i_1_reg_1671 <= ap_reg_pp0_iter1_phitmp6128_i_1_reg_1671;
                ap_reg_pp0_iter2_phitmp6128_i_2_reg_1698 <= ap_reg_pp0_iter1_phitmp6128_i_2_reg_1698;
                ap_reg_pp0_iter2_phitmp6128_i_3_reg_1725 <= ap_reg_pp0_iter1_phitmp6128_i_3_reg_1725;
                ap_reg_pp0_iter2_phitmp6128_i_reg_1644 <= ap_reg_pp0_iter1_phitmp6128_i_reg_1644;
                ap_reg_pp0_iter2_snr_V_read_reg_1614 <= ap_reg_pp0_iter1_snr_V_read_reg_1614;
                ap_reg_pp0_iter2_tmp_106_1_reg_1676 <= ap_reg_pp0_iter1_tmp_106_1_reg_1676;
                ap_reg_pp0_iter2_tmp_106_2_reg_1703 <= ap_reg_pp0_iter1_tmp_106_2_reg_1703;
                ap_reg_pp0_iter2_tmp_106_3_reg_1730 <= ap_reg_pp0_iter1_tmp_106_3_reg_1730;
                ap_reg_pp0_iter2_tmp_69_reg_1649 <= ap_reg_pp0_iter1_tmp_69_reg_1649;
                ap_reg_pp0_iter3_p_Val2_s_reg_1619 <= ap_reg_pp0_iter2_p_Val2_s_reg_1619;
                ap_reg_pp0_iter3_snr_V_read_reg_1614 <= ap_reg_pp0_iter2_snr_V_read_reg_1614;
                ap_reg_pp0_iter3_tmp_106_1_reg_1676 <= ap_reg_pp0_iter2_tmp_106_1_reg_1676;
                ap_reg_pp0_iter3_tmp_106_2_reg_1703 <= ap_reg_pp0_iter2_tmp_106_2_reg_1703;
                ap_reg_pp0_iter3_tmp_106_3_reg_1730 <= ap_reg_pp0_iter2_tmp_106_3_reg_1730;
                ap_reg_pp0_iter3_tmp_19_reg_1804 <= tmp_19_reg_1804;
                ap_reg_pp0_iter3_tmp_30_reg_1814 <= tmp_30_reg_1814;
                ap_reg_pp0_iter3_tmp_33_reg_1824 <= tmp_33_reg_1824;
                ap_reg_pp0_iter3_tmp_36_reg_1834 <= tmp_36_reg_1834;
                ap_reg_pp0_iter3_tmp_69_reg_1649 <= ap_reg_pp0_iter2_tmp_69_reg_1649;
                ap_reg_pp0_iter4_p_Val2_s_reg_1619 <= ap_reg_pp0_iter3_p_Val2_s_reg_1619;
                ap_reg_pp0_iter4_snr_V_read_reg_1614 <= ap_reg_pp0_iter3_snr_V_read_reg_1614;
                ap_reg_pp0_iter4_tmp_106_1_reg_1676 <= ap_reg_pp0_iter3_tmp_106_1_reg_1676;
                ap_reg_pp0_iter4_tmp_106_2_reg_1703 <= ap_reg_pp0_iter3_tmp_106_2_reg_1703;
                ap_reg_pp0_iter4_tmp_106_3_reg_1730 <= ap_reg_pp0_iter3_tmp_106_3_reg_1730;
                ap_reg_pp0_iter4_tmp_29_reg_1844 <= tmp_29_reg_1844;
                ap_reg_pp0_iter4_tmp_30_reg_1814 <= ap_reg_pp0_iter3_tmp_30_reg_1814;
                ap_reg_pp0_iter4_tmp_35_reg_1854 <= tmp_35_reg_1854;
                ap_reg_pp0_iter4_tmp_36_reg_1834 <= ap_reg_pp0_iter3_tmp_36_reg_1834;
                ap_reg_pp0_iter4_tmp_69_reg_1649 <= ap_reg_pp0_iter3_tmp_69_reg_1649;
                ap_reg_pp0_iter5_p_Val2_s_reg_1619 <= ap_reg_pp0_iter4_p_Val2_s_reg_1619;
                ap_reg_pp0_iter5_snr_V_read_reg_1614 <= ap_reg_pp0_iter4_snr_V_read_reg_1614;
                ap_reg_pp0_iter5_tmp_106_1_reg_1676 <= ap_reg_pp0_iter4_tmp_106_1_reg_1676;
                ap_reg_pp0_iter5_tmp_106_2_reg_1703 <= ap_reg_pp0_iter4_tmp_106_2_reg_1703;
                ap_reg_pp0_iter5_tmp_106_3_reg_1730 <= ap_reg_pp0_iter4_tmp_106_3_reg_1730;
                ap_reg_pp0_iter5_tmp_35_reg_1854 <= ap_reg_pp0_iter4_tmp_35_reg_1854;
                ap_reg_pp0_iter5_tmp_36_reg_1834 <= ap_reg_pp0_iter4_tmp_36_reg_1834;
                ap_reg_pp0_iter5_tmp_69_reg_1649 <= ap_reg_pp0_iter4_tmp_69_reg_1649;
                ap_reg_pp0_iter6_coarseContents308_lo_2_reg_1899 <= coarseContents308_lo_2_reg_1899;
                ap_reg_pp0_iter6_coarseContents308_lo_reg_1879 <= coarseContents308_lo_reg_1879;
                ap_reg_pp0_iter6_p_Val2_s_reg_1619 <= ap_reg_pp0_iter5_p_Val2_s_reg_1619;
                ap_reg_pp0_iter6_snr_V_read_reg_1614 <= ap_reg_pp0_iter5_snr_V_read_reg_1614;
                ap_reg_pp0_iter6_tmp_106_1_reg_1676 <= ap_reg_pp0_iter5_tmp_106_1_reg_1676;
                ap_reg_pp0_iter6_tmp_106_3_reg_1730 <= ap_reg_pp0_iter5_tmp_106_3_reg_1730;
                ap_reg_pp0_iter7_coarseContents308_lo_1_reg_1919 <= coarseContents308_lo_1_reg_1919;
                ap_reg_pp0_iter7_coarseContents308_lo_2_reg_1899 <= ap_reg_pp0_iter6_coarseContents308_lo_2_reg_1899;
                ap_reg_pp0_iter7_coarseContents308_lo_reg_1879 <= ap_reg_pp0_iter6_coarseContents308_lo_reg_1879;
                ap_reg_pp0_iter7_p_Val2_s_reg_1619 <= ap_reg_pp0_iter6_p_Val2_s_reg_1619;
                ap_reg_pp0_iter7_snr_V_read_reg_1614 <= ap_reg_pp0_iter6_snr_V_read_reg_1614;
                ap_reg_pp0_iter7_tmp_106_3_reg_1730 <= ap_reg_pp0_iter6_tmp_106_3_reg_1730;
                ap_reg_pp0_iter8_coarseContents308_lo_1_reg_1919 <= ap_reg_pp0_iter7_coarseContents308_lo_1_reg_1919;
                ap_reg_pp0_iter8_coarseContents308_lo_2_reg_1899 <= ap_reg_pp0_iter7_coarseContents308_lo_2_reg_1899;
                ap_reg_pp0_iter8_coarseContents308_lo_3_reg_1959 <= coarseContents308_lo_3_reg_1959;
                ap_reg_pp0_iter8_coarseContents308_lo_reg_1879 <= ap_reg_pp0_iter7_coarseContents308_lo_reg_1879;
                ap_reg_pp0_iter8_p_Val2_s_reg_1619 <= ap_reg_pp0_iter7_p_Val2_s_reg_1619;
                ap_reg_pp0_iter8_snr_V_read_reg_1614 <= ap_reg_pp0_iter7_snr_V_read_reg_1614;
                ap_reg_pp0_iter9_coarseContents308_lo_1_reg_1919 <= ap_reg_pp0_iter8_coarseContents308_lo_1_reg_1919;
                ap_reg_pp0_iter9_coarseContents308_lo_2_reg_1899 <= ap_reg_pp0_iter8_coarseContents308_lo_2_reg_1899;
                ap_reg_pp0_iter9_coarseContents308_lo_3_reg_1959 <= ap_reg_pp0_iter8_coarseContents308_lo_3_reg_1959;
                ap_reg_pp0_iter9_coarseContents308_lo_reg_1879 <= ap_reg_pp0_iter8_coarseContents308_lo_reg_1879;
                ap_reg_pp0_iter9_p_Val2_s_reg_1619 <= ap_reg_pp0_iter8_p_Val2_s_reg_1619;
                ap_reg_pp0_iter9_snr_V_read_reg_1614 <= ap_reg_pp0_iter8_snr_V_read_reg_1614;
                centralLimitNoise_V_reg_2054 <= centralLimitNoise_V_fu_1502_p2;
                r_V_22_1_reg_1999 <= grp_fu_1602_p2;
                r_V_22_2_reg_1984 <= grp_fu_1596_p2;
                r_V_22_3_reg_2024 <= grp_fu_1608_p2;
                r_V_27_reg_2074 <= grp_fu_1514_p2;
                r_V_reg_2079 <= r_V_fu_1523_p2;
                r_V_s_reg_1979 <= grp_fu_1590_p2;
                roundedNoise_V_reg_2084 <= r_V_fu_1523_p2(47 downto 27);
                scale_V_reg_2059 <= scaleLookup_q0;
                tmp_101_reg_2089 <= r_V_fu_1523_p2(47 downto 44);
                tmp_114_1_reg_2014 <= tmp_114_1_fu_1391_p2;
                tmp_114_2_reg_2004 <= tmp_114_2_fu_1352_p2;
                tmp_114_3_reg_2034 <= tmp_114_3_fu_1457_p2;
                tmp_17_reg_1839 <= tmp_17_fu_1224_p2;
                tmp_19_reg_1804 <= bramChapter_V_load_fu_932_p3(8 downto 5);
                tmp_22_reg_1989 <= tmp_22_fu_1326_p2;
                tmp_23_reg_2044 <= tmp_23_fu_1473_p2;
                tmp_29_reg_1844 <= tmp_29_fu_1228_p2;
                tmp_30_reg_1814 <= bramChapter_V_load_s_fu_1022_p3(8 downto 5);
                tmp_32_reg_1849 <= tmp_32_fu_1232_p2;
                tmp_33_reg_1824 <= bramChapter_V_load_2_fu_1112_p3(8 downto 5);
                tmp_35_reg_1854 <= tmp_35_fu_1236_p2;
                tmp_36_reg_1834 <= bramChapter_V_load_3_fu_1202_p3(8 downto 5);
                tmp_reg_2029 <= tmp_fu_1424_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1))) then
                ap_reg_pp0_iter1_icmp3_reg_1654 <= icmp3_reg_1654;
                ap_reg_pp0_iter1_icmp6_reg_1681 <= icmp6_reg_1681;
                ap_reg_pp0_iter1_icmp9_reg_1708 <= icmp9_reg_1708;
                ap_reg_pp0_iter1_icmp_reg_1627 <= icmp_reg_1627;
                ap_reg_pp0_iter1_p_Val2_s_reg_1619 <= p_Val2_s_reg_1619;
                ap_reg_pp0_iter1_phitmp6128_i_1_reg_1671 <= phitmp6128_i_1_reg_1671;
                ap_reg_pp0_iter1_phitmp6128_i_2_reg_1698 <= phitmp6128_i_2_reg_1698;
                ap_reg_pp0_iter1_phitmp6128_i_3_reg_1725 <= phitmp6128_i_3_reg_1725;
                ap_reg_pp0_iter1_phitmp6128_i_reg_1644 <= phitmp6128_i_reg_1644;
                ap_reg_pp0_iter1_snr_V_read_reg_1614 <= snr_V_read_reg_1614;
                ap_reg_pp0_iter1_tmp_106_1_reg_1676 <= tmp_106_1_reg_1676;
                ap_reg_pp0_iter1_tmp_106_2_reg_1703 <= tmp_106_2_reg_1703;
                ap_reg_pp0_iter1_tmp_106_3_reg_1730 <= tmp_106_3_reg_1730;
                ap_reg_pp0_iter1_tmp_69_reg_1649 <= tmp_69_reg_1649;
                icmp10_reg_1783 <= icmp10_fu_837_p2;
                icmp1_reg_1735 <= icmp1_fu_756_p2;
                icmp3_reg_1654 <= icmp3_fu_396_p2;
                icmp4_reg_1751 <= icmp4_fu_783_p2;
                icmp6_reg_1681 <= icmp6_fu_478_p2;
                icmp7_reg_1767 <= icmp7_fu_810_p2;
                icmp9_reg_1708 <= icmp9_fu_560_p2;
                icmp_reg_1627 <= icmp_fu_320_p2;
                norm_V_load_3_0_1_reg_1633 <= norm_V_load_3_0_1_fu_344_p3;
                norm_V_load_3_0_2_reg_1740 <= norm_V_load_3_0_2_fu_766_p3;
                norm_V_load_3_1_1_reg_1660 <= norm_V_load_3_1_1_fu_420_p3;
                norm_V_load_3_1_2_reg_1756 <= norm_V_load_3_1_2_fu_793_p3;
                norm_V_load_3_2_1_reg_1687 <= norm_V_load_3_2_1_fu_502_p3;
                norm_V_load_3_2_2_reg_1772 <= norm_V_load_3_2_2_fu_820_p3;
                norm_V_load_3_3_1_reg_1714 <= norm_V_load_3_3_1_fu_584_p3;
                norm_V_load_3_3_2_reg_1788 <= norm_V_load_3_3_2_fu_847_p3;
                p_Val2_s_reg_1619 <= chan_real_noise_lfsr;
                phitmp6128_i_1_reg_1671 <= chan_real_noise_lfsr(46 downto 42);
                phitmp6128_i_2_reg_1698 <= chan_real_noise_lfsr(78 downto 74);
                phitmp6128_i_3_reg_1725 <= chan_real_noise_lfsr(110 downto 106);
                phitmp6128_i_reg_1644 <= chan_real_noise_lfsr(14 downto 10);
                snr_V_read_reg_1614 <= snr_V;
                tmp_106_1_reg_1676 <= chan_real_noise_lfsr(41 downto 32);
                tmp_106_2_reg_1703 <= chan_real_noise_lfsr(73 downto 64);
                tmp_106_3_reg_1730 <= chan_real_noise_lfsr(105 downto 96);
                tmp_56_reg_1639 <= norm_V_load_3_0_1_fu_344_p3(14 downto 11);
                tmp_61_reg_1746 <= norm_V_load_3_0_2_fu_766_p3(14 downto 13);
                tmp_69_reg_1649 <= tmp_69_fu_372_p1;
                tmp_72_reg_1666 <= norm_V_load_3_1_1_fu_420_p3(14 downto 11);
                tmp_74_reg_1762 <= norm_V_load_3_1_2_fu_793_p3(14 downto 13);
                tmp_81_reg_1693 <= norm_V_load_3_2_1_fu_502_p3(14 downto 11);
                tmp_83_reg_1778 <= norm_V_load_3_2_2_fu_820_p3(14 downto 13);
                tmp_90_reg_1720 <= norm_V_load_3_3_1_fu_584_p3(14 downto 11);
                tmp_92_reg_1794 <= norm_V_load_3_3_2_fu_847_p3(14 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then
                coarseContents308_lo_1_reg_1919 <= coarseContents308_q2;
                gradientContents_loa_1_reg_1924 <= gradientContents_q2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then
                coarseContents308_lo_2_reg_1899 <= coarseContents308_q1;
                coarseContents308_lo_reg_1879 <= coarseContents308_q0;
                gradientContents_loa_2_reg_1904 <= gradientContents_q1;
                gradientContents_loa_reg_1884 <= gradientContents_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter7))) then
                coarseContents308_lo_3_reg_1959 <= coarseContents308_q3;
                gradientContents_loa_3_reg_1964 <= gradientContents_q3;
            end if;
        end if;
    end process;
    tmp_68_reg_1799(4 downto 0) <= "00000";
    tmp_78_reg_1809(4 downto 0) <= "00000";
    tmp_87_reg_1819(4 downto 0) <= "00000";
    tmp_96_reg_1829(4 downto 0) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_enable_reg_pp0_iter0, ap_ce, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    addconv_i_1_fu_1397_p2 <= std_logic_vector(signed(tmp_108_1_fu_1377_p1) + signed(r_V_23_1_cast_fu_1387_p1));
    addconv_i_2_fu_1358_p2 <= std_logic_vector(signed(tmp_108_2_fu_1338_p1) + signed(r_V_23_2_cast_fu_1348_p1));
    addconv_i_3_fu_1463_p2 <= std_logic_vector(signed(tmp_108_3_fu_1443_p1) + signed(r_V_23_3_cast_fu_1453_p1));
    addconv_i_fu_1332_p2 <= std_logic_vector(signed(tmp_21_fu_1312_p1) + signed(r_V_23_cast_fu_1322_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter20, ap_ce)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or (not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter20)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_idle_pp0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10) and (ap_const_logic_0 = ap_enable_reg_pp0_iter11) and (ap_const_logic_0 = ap_enable_reg_pp0_iter12) and (ap_const_logic_0 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = ap_enable_reg_pp0_iter14) and (ap_const_logic_0 = ap_enable_reg_pp0_iter15) and (ap_const_logic_0 = ap_enable_reg_pp0_iter16) and (ap_const_logic_0 = ap_enable_reg_pp0_iter17) and (ap_const_logic_0 = ap_enable_reg_pp0_iter18) and (ap_const_logic_0 = ap_enable_reg_pp0_iter19) and (ap_const_logic_0 = ap_enable_reg_pp0_iter20))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to19_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = ap_enable_reg_pp0_iter2) and (ap_const_logic_0 = ap_enable_reg_pp0_iter3) and (ap_const_logic_0 = ap_enable_reg_pp0_iter4) and (ap_const_logic_0 = ap_enable_reg_pp0_iter5) and (ap_const_logic_0 = ap_enable_reg_pp0_iter6) and (ap_const_logic_0 = ap_enable_reg_pp0_iter7) and (ap_const_logic_0 = ap_enable_reg_pp0_iter8) and (ap_const_logic_0 = ap_enable_reg_pp0_iter9) and (ap_const_logic_0 = ap_enable_reg_pp0_iter10) and (ap_const_logic_0 = ap_enable_reg_pp0_iter11) and (ap_const_logic_0 = ap_enable_reg_pp0_iter12) and (ap_const_logic_0 = ap_enable_reg_pp0_iter13) and (ap_const_logic_0 = ap_enable_reg_pp0_iter14) and (ap_const_logic_0 = ap_enable_reg_pp0_iter15) and (ap_const_logic_0 = ap_enable_reg_pp0_iter16) and (ap_const_logic_0 = ap_enable_reg_pp0_iter17) and (ap_const_logic_0 = ap_enable_reg_pp0_iter18) and (ap_const_logic_0 = ap_enable_reg_pp0_iter19))) then 
            ap_idle_pp0_0to19 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to19 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to19)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_idle_pp0_0to19))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        saturatedNoise_V_1_fu_1568_p3 when (tmp_28_fu_1576_p2(0) = '1') else 
        saturatedNoise_V_fu_1559_p4;
    bramChapter_V_load_1_10_fu_1166_p3 <= 
        bramChapter_V_load_1_11_fu_1148_p3 when (icmp11_fu_1155_p2(0) = '1') else 
        tmp_136_3_1_fu_1160_p2;
    bramChapter_V_load_1_11_fu_1148_p3 <= 
        bramChapter_V_load_1_9_fu_1134_p3 when (icmp10_reg_1783(0) = '1') else 
        tmp_136_3_s_fu_1141_p3;
    bramChapter_V_load_1_1_fu_878_p3 <= 
        bramChapter_V_load_1_fu_864_p3 when (icmp1_reg_1735(0) = '1') else 
        tmp_136_0_s_fu_871_p3;
    bramChapter_V_load_1_2_fu_896_p3 <= 
        bramChapter_V_load_1_1_fu_878_p3 when (icmp2_fu_885_p2(0) = '1') else 
        tmp_136_0_1_fu_890_p2;
    bramChapter_V_load_1_3_fu_954_p3 <= 
        ap_const_lv9_0 when (ap_reg_pp0_iter1_icmp3_reg_1654(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_1_4_fu_968_p3 <= 
        bramChapter_V_load_1_3_fu_954_p3 when (icmp4_reg_1751(0) = '1') else 
        tmp_136_1_s_fu_961_p3;
    bramChapter_V_load_1_5_fu_986_p3 <= 
        bramChapter_V_load_1_4_fu_968_p3 when (icmp5_fu_975_p2(0) = '1') else 
        tmp_136_1_1_fu_980_p2;
    bramChapter_V_load_1_6_fu_1044_p3 <= 
        ap_const_lv9_0 when (ap_reg_pp0_iter1_icmp6_reg_1681(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_1_7_fu_1058_p3 <= 
        bramChapter_V_load_1_6_fu_1044_p3 when (icmp7_reg_1767(0) = '1') else 
        tmp_136_2_s_fu_1051_p3;
    bramChapter_V_load_1_8_fu_1076_p3 <= 
        bramChapter_V_load_1_7_fu_1058_p3 when (icmp8_fu_1065_p2(0) = '1') else 
        tmp_136_2_1_fu_1070_p2;
    bramChapter_V_load_1_9_fu_1134_p3 <= 
        ap_const_lv9_0 when (ap_reg_pp0_iter1_icmp9_reg_1708(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_1_fu_864_p3 <= 
        ap_const_lv9_0 when (ap_reg_pp0_iter1_icmp_reg_1627(0) = '1') else 
        ap_const_lv9_100;
    bramChapter_V_load_2_fu_1112_p3 <= 
        tmp_136_2_3_fu_1106_p2 when (tmp_86_fu_1098_p3(0) = '1') else 
        bramChapter_V_load_1_8_fu_1076_p3;
    bramChapter_V_load_3_fu_1202_p3 <= 
        tmp_136_3_3_fu_1196_p2 when (tmp_95_fu_1188_p3(0) = '1') else 
        bramChapter_V_load_1_10_fu_1166_p3;
    bramChapter_V_load_fu_932_p3 <= 
        tmp_136_0_3_fu_926_p2 when (tmp_67_fu_918_p3(0) = '1') else 
        bramChapter_V_load_1_2_fu_896_p3;
    bramChapter_V_load_s_fu_1022_p3 <= 
        tmp_136_1_3_fu_1016_p2 when (tmp_77_fu_1008_p3(0) = '1') else 
        bramChapter_V_load_1_5_fu_986_p3;
    centralLimitNoise_V_fu_1502_p2 <= std_logic_vector(signed(tmp_s_fu_1495_p1) + signed(tmp_69_cast_fu_1499_p1));
    coarseContents308_address0 <= tmp_20_fu_1246_p1(9 - 1 downto 0);
    coarseContents308_address1 <= tmp_107_2_fu_1258_p1(9 - 1 downto 0);
    coarseContents308_address2 <= tmp_107_1_fu_1270_p1(9 - 1 downto 0);
    coarseContents308_address3 <= tmp_107_3_fu_1294_p1(9 - 1 downto 0);

    coarseContents308_ce0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            coarseContents308_ce0 <= ap_const_logic_1;
        else 
            coarseContents308_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    coarseContents308_ce1_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            coarseContents308_ce1 <= ap_const_logic_1;
        else 
            coarseContents308_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    coarseContents308_ce2_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            coarseContents308_ce2 <= ap_const_logic_1;
        else 
            coarseContents308_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    coarseContents308_ce3_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            coarseContents308_ce3 <= ap_const_logic_1;
        else 
            coarseContents308_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    gradientContents_address0 <= tmp_20_fu_1246_p1(9 - 1 downto 0);
    gradientContents_address1 <= tmp_107_2_fu_1258_p1(9 - 1 downto 0);
    gradientContents_address2 <= tmp_107_1_fu_1270_p1(9 - 1 downto 0);
    gradientContents_address3 <= tmp_107_3_fu_1294_p1(9 - 1 downto 0);

    gradientContents_ce0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            gradientContents_ce0 <= ap_const_logic_1;
        else 
            gradientContents_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    gradientContents_ce1_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter4, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter4))) then 
            gradientContents_ce1 <= ap_const_logic_1;
        else 
            gradientContents_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    gradientContents_ce2_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter5, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter5))) then 
            gradientContents_ce2 <= ap_const_logic_1;
        else 
            gradientContents_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    gradientContents_ce3_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter6, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter6))) then 
            gradientContents_ce3 <= ap_const_logic_1;
        else 
            gradientContents_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_1514_ce_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1514_ce <= ap_const_logic_1;
        else 
            grp_fu_1514_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1514_p0 <= grp_fu_1514_p00(17 - 1 downto 0);
    grp_fu_1514_p00 <= std_logic_vector(resize(unsigned(scale_V_reg_2059),48));

    grp_fu_1590_ce_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1590_ce <= ap_const_logic_1;
        else 
            grp_fu_1590_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1590_p1 <= grp_fu_1590_p10(13 - 1 downto 0);
    grp_fu_1590_p10 <= std_logic_vector(resize(unsigned(gradientContents_loa_reg_1884),23));

    grp_fu_1596_ce_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1596_ce <= ap_const_logic_1;
        else 
            grp_fu_1596_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1596_p1 <= grp_fu_1596_p10(13 - 1 downto 0);
    grp_fu_1596_p10 <= std_logic_vector(resize(unsigned(gradientContents_loa_2_reg_1904),23));

    grp_fu_1602_ce_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1602_ce <= ap_const_logic_1;
        else 
            grp_fu_1602_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1602_p1 <= grp_fu_1602_p10(13 - 1 downto 0);
    grp_fu_1602_p10 <= std_logic_vector(resize(unsigned(gradientContents_loa_1_reg_1924),23));

    grp_fu_1608_ce_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_const_logic_1 = ap_ce))) then 
            grp_fu_1608_ce <= ap_const_logic_1;
        else 
            grp_fu_1608_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1608_p1 <= grp_fu_1608_p10(13 - 1 downto 0);
    grp_fu_1608_p10 <= std_logic_vector(resize(unsigned(gradientContents_loa_3_reg_1964),23));
    icmp10_fu_837_p2 <= "1" when (tmp_90_reg_1720 = ap_const_lv4_0) else "0";
    icmp11_fu_1155_p2 <= "1" when (tmp_92_reg_1794 = ap_const_lv2_0) else "0";
    icmp12_fu_1549_p2 <= "1" when (signed(tmp_101_reg_2089) > signed(ap_const_lv4_0)) else "0";
    icmp1_fu_756_p2 <= "1" when (tmp_56_reg_1639 = ap_const_lv4_0) else "0";
    icmp2_fu_885_p2 <= "1" when (tmp_61_reg_1746 = ap_const_lv2_0) else "0";
    icmp3_fu_396_p2 <= "1" when (tmp_71_fu_386_p4 = ap_const_lv8_0) else "0";
    icmp4_fu_783_p2 <= "1" when (tmp_72_reg_1666 = ap_const_lv4_0) else "0";
    icmp5_fu_975_p2 <= "1" when (tmp_74_reg_1762 = ap_const_lv2_0) else "0";
    icmp6_fu_478_p2 <= "1" when (tmp_80_fu_468_p4 = ap_const_lv8_0) else "0";
    icmp7_fu_810_p2 <= "1" when (tmp_81_reg_1693 = ap_const_lv4_0) else "0";
    icmp8_fu_1065_p2 <= "1" when (tmp_83_reg_1778 = ap_const_lv2_0) else "0";
    icmp9_fu_560_p2 <= "1" when (tmp_89_fu_550_p4 = ap_const_lv8_0) else "0";
    icmp_fu_320_p2 <= "1" when (tmp_55_fu_310_p4 = ap_const_lv8_0) else "0";
    noiseGen_V_load_1_fu_1437_p3 <= 
        tmp_114_1_reg_2014 when (tmp_70_fu_1430_p3(0) = '1') else 
        addconv_i_1_reg_2019;
    noiseGen_V_load_2_fu_1410_p3 <= 
        tmp_114_2_reg_2004 when (tmp_79_fu_1403_p3(0) = '1') else 
        addconv_i_2_reg_2009;
    noiseGen_V_load_3_fu_1489_p3 <= 
        tmp_114_3_reg_2034 when (tmp_88_fu_1482_p3(0) = '1') else 
        addconv_i_3_reg_2039;
    noiseGen_V_load_fu_1371_p3 <= 
        tmp_22_reg_1989 when (tmp_54_fu_1364_p3(0) = '1') else 
        addconv_i_reg_1994;
    norm_V_load_3_0_1_fu_344_p3 <= 
        tmp_16_fu_336_p3 when (icmp_fu_320_p2(0) = '1') else 
        phitmp6131_i_fu_300_p4;
    norm_V_load_3_0_2_fu_766_p3 <= 
        tmp_60_fu_761_p2 when (icmp1_fu_756_p2(0) = '1') else 
        norm_V_load_3_0_1_reg_1633;
    norm_V_load_3_1_1_fu_420_p3 <= 
        tmp_134_1_fu_412_p3 when (icmp3_fu_396_p2(0) = '1') else 
        phitmp6131_i_1_fu_376_p4;
    norm_V_load_3_1_2_fu_793_p3 <= 
        tmp_73_fu_788_p2 when (icmp4_fu_783_p2(0) = '1') else 
        norm_V_load_3_1_1_reg_1660;
    norm_V_load_3_2_1_fu_502_p3 <= 
        tmp_134_2_fu_494_p3 when (icmp6_fu_478_p2(0) = '1') else 
        phitmp6131_i_2_fu_458_p4;
    norm_V_load_3_2_2_fu_820_p3 <= 
        tmp_82_fu_815_p2 when (icmp7_fu_810_p2(0) = '1') else 
        norm_V_load_3_2_1_reg_1687;
    norm_V_load_3_3_1_fu_584_p3 <= 
        tmp_134_3_fu_576_p3 when (icmp9_fu_560_p2(0) = '1') else 
        phitmp6131_i_3_fu_540_p4;
    norm_V_load_3_3_2_fu_847_p3 <= 
        tmp_91_fu_842_p2 when (icmp10_fu_837_p2(0) = '1') else 
        norm_V_load_3_3_1_reg_1714;
        p_0202_0_i_cast_fu_1416_p1 <= std_logic_vector(resize(signed(noiseGen_V_load_fu_1371_p3),30));

        p_0210_0_i_cast_fu_1469_p1 <= std_logic_vector(resize(signed(noiseGen_V_load_1_fu_1437_p3),30));

    p_Result_s_fu_742_p3 <= (r_V_20_fu_686_p2 & r_V_26_fu_736_p2);
    phitmp6131_i_1_fu_376_p4 <= chan_real_noise_lfsr(61 downto 47);
    phitmp6131_i_2_fu_458_p4 <= chan_real_noise_lfsr(93 downto 79);
    phitmp6131_i_3_fu_540_p4 <= chan_real_noise_lfsr(125 downto 111);
    phitmp6131_i_fu_300_p4 <= chan_real_noise_lfsr(29 downto 15);
    r_V_10_fu_710_p4 <= r_V_22_fu_704_p2(63 downto 13);
    r_V_15_fu_646_p3 <= (tmp_37_fu_636_p4 & ap_const_lv34_0);
    r_V_16_fu_654_p2 <= (r_V_15_fu_646_p3 xor rhs_V_fu_622_p4);
    r_V_17_fu_670_p1 <= std_logic_vector(resize(unsigned(r_V_4_fu_660_p4),64));
    r_V_18_fu_674_p2 <= (r_V_17_fu_670_p1 xor r_V_16_fu_654_p2);
    r_V_19_fu_680_p2 <= std_logic_vector(shift_left(unsigned(r_V_18_fu_674_p2),to_integer(unsigned('0' & ap_const_lv64_1(31-1 downto 0)))));
    r_V_1_fu_1315_p3 <= (ap_reg_pp0_iter9_coarseContents308_lo_reg_1879 & ap_const_lv10_0);
    r_V_20_fu_686_p2 <= (r_V_19_fu_680_p2 xor r_V_18_fu_674_p2);
    r_V_21_fu_696_p3 <= (tmp_99_fu_692_p1 & ap_const_lv58_0);
    r_V_22_fu_704_p2 <= (r_V_21_fu_696_p3 xor rhs_V_3_fu_632_p1);
    r_V_23_1_cast_fu_1387_p1 <= std_logic_vector(resize(unsigned(r_V_23_1_fu_1380_p3),29));
    r_V_23_1_fu_1380_p3 <= (ap_reg_pp0_iter10_coarseContents308_lo_1_reg_1919 & ap_const_lv10_0);
    r_V_23_2_cast_fu_1348_p1 <= std_logic_vector(resize(unsigned(r_V_23_2_fu_1341_p3),29));
    r_V_23_2_fu_1341_p3 <= (ap_reg_pp0_iter9_coarseContents308_lo_2_reg_1899 & ap_const_lv10_0);
    r_V_23_3_cast_fu_1453_p1 <= std_logic_vector(resize(unsigned(r_V_23_3_fu_1446_p3),29));
    r_V_23_3_fu_1446_p3 <= (ap_reg_pp0_iter11_coarseContents308_lo_3_reg_1959 & ap_const_lv10_0);
    r_V_23_cast_fu_1322_p1 <= std_logic_vector(resize(unsigned(r_V_1_fu_1315_p3),29));
    r_V_23_fu_720_p1 <= std_logic_vector(resize(unsigned(r_V_10_fu_710_p4),64));
    r_V_24_fu_724_p2 <= (r_V_23_fu_720_p1 xor r_V_22_fu_704_p2);
    r_V_25_fu_730_p2 <= std_logic_vector(shift_left(unsigned(r_V_24_fu_724_p2),to_integer(unsigned('0' & ap_const_lv64_7(31-1 downto 0)))));
    r_V_26_fu_736_p2 <= (r_V_25_fu_730_p2 xor r_V_24_fu_724_p2);
    r_V_4_fu_660_p4 <= r_V_16_fu_654_p2(63 downto 35);
    r_V_fu_1523_p2 <= std_logic_vector(unsigned(ap_const_lv49_4000000) + unsigned(tmp_25_fu_1520_p1));
    rhs_V_3_fu_632_p1 <= chan_real_noise_lfsr(64 - 1 downto 0);
    rhs_V_fu_622_p4 <= chan_real_noise_lfsr(127 downto 64);
    saturatedNoise_V_1_fu_1568_p3 <= 
        ap_const_lv18_1FFFF when (icmp12_fu_1549_p2(0) = '1') else 
        ap_const_lv18_20001;
    saturatedNoise_V_fu_1559_p4 <= r_V_reg_2079(44 downto 27);
    scaleLookup_address0 <= tmp_24_fu_1478_p1(8 - 1 downto 0);

    scaleLookup_ce0_assign_proc : process(ap_start, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter12, ap_ce)
    begin
        if ((not(((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) and (ap_ce = ap_const_logic_1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter12))) then 
            scaleLookup_ce0 <= ap_const_logic_1;
        else 
            scaleLookup_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_105_1_fu_1264_p3 <= (ap_reg_pp0_iter4_tmp_30_reg_1814 & ap_reg_pp0_iter4_tmp_29_reg_1844);
    tmp_105_2_fu_1252_p3 <= (ap_reg_pp0_iter3_tmp_33_reg_1824 & tmp_32_reg_1849);
    tmp_105_3_fu_1288_p3 <= (ap_reg_pp0_iter5_tmp_36_reg_1834 & ap_reg_pp0_iter5_tmp_35_reg_1854);
    tmp_107_1_fu_1270_p1 <= std_logic_vector(resize(unsigned(tmp_105_1_fu_1264_p3),64));
    tmp_107_2_fu_1258_p1 <= std_logic_vector(resize(unsigned(tmp_105_2_fu_1252_p3),64));
    tmp_107_3_fu_1294_p1 <= std_logic_vector(resize(unsigned(tmp_105_3_fu_1288_p3),64));
        tmp_108_1_fu_1377_p1 <= std_logic_vector(resize(signed(r_V_22_1_reg_1999),29));

        tmp_108_2_fu_1338_p1 <= std_logic_vector(resize(signed(r_V_22_2_reg_1984),29));

        tmp_108_3_fu_1443_p1 <= std_logic_vector(resize(signed(r_V_22_3_reg_2024),29));

    tmp_114_1_fu_1391_p2 <= std_logic_vector(signed(tmp_108_1_fu_1377_p1) - signed(r_V_23_1_cast_fu_1387_p1));
    tmp_114_2_fu_1352_p2 <= std_logic_vector(signed(tmp_108_2_fu_1338_p1) - signed(r_V_23_2_cast_fu_1348_p1));
    tmp_114_3_fu_1457_p2 <= std_logic_vector(signed(tmp_108_3_fu_1443_p1) - signed(r_V_23_3_cast_fu_1453_p1));
    tmp_134_1_fu_412_p3 <= (tmp_26_fu_402_p4 & ap_const_lv8_0);
    tmp_134_2_fu_494_p3 <= (tmp_31_fu_484_p4 & ap_const_lv8_0);
    tmp_134_3_fu_576_p3 <= (tmp_34_fu_566_p4 & ap_const_lv8_0);
    tmp_136_0_1_fu_890_p2 <= (bramChapter_V_load_1_1_fu_878_p3 or ap_const_lv9_40);
    tmp_136_0_3_fu_926_p2 <= (bramChapter_V_load_1_2_fu_896_p3 or ap_const_lv9_20);
    tmp_136_0_s_fu_871_p3 <= 
        ap_const_lv9_80 when (ap_reg_pp0_iter1_icmp_reg_1627(0) = '1') else 
        ap_const_lv9_180;
    tmp_136_1_1_fu_980_p2 <= (bramChapter_V_load_1_4_fu_968_p3 or ap_const_lv9_40);
    tmp_136_1_3_fu_1016_p2 <= (bramChapter_V_load_1_5_fu_986_p3 or ap_const_lv9_20);
    tmp_136_1_s_fu_961_p3 <= 
        ap_const_lv9_80 when (ap_reg_pp0_iter1_icmp3_reg_1654(0) = '1') else 
        ap_const_lv9_180;
    tmp_136_2_1_fu_1070_p2 <= (bramChapter_V_load_1_7_fu_1058_p3 or ap_const_lv9_40);
    tmp_136_2_3_fu_1106_p2 <= (bramChapter_V_load_1_8_fu_1076_p3 or ap_const_lv9_20);
    tmp_136_2_s_fu_1051_p3 <= 
        ap_const_lv9_80 when (ap_reg_pp0_iter1_icmp6_reg_1681(0) = '1') else 
        ap_const_lv9_180;
    tmp_136_3_1_fu_1160_p2 <= (bramChapter_V_load_1_11_fu_1148_p3 or ap_const_lv9_40);
    tmp_136_3_3_fu_1196_p2 <= (bramChapter_V_load_1_10_fu_1166_p3 or ap_const_lv9_20);
    tmp_136_3_s_fu_1141_p3 <= 
        ap_const_lv9_80 when (ap_reg_pp0_iter1_icmp9_reg_1708(0) = '1') else 
        ap_const_lv9_180;
    tmp_15_fu_326_p4 <= chan_real_noise_lfsr(21 downto 15);
    tmp_16_fu_336_p3 <= (tmp_15_fu_326_p4 & ap_const_lv8_0);
    tmp_17_fu_1224_p2 <= (tmp_68_reg_1799 or ap_reg_pp0_iter2_phitmp6128_i_reg_1644);
    tmp_18_fu_1240_p3 <= (ap_reg_pp0_iter3_tmp_19_reg_1804 & tmp_17_reg_1839);
    tmp_20_fu_1246_p1 <= std_logic_vector(resize(unsigned(tmp_18_fu_1240_p3),64));
        tmp_21_fu_1312_p1 <= std_logic_vector(resize(signed(r_V_s_reg_1979),29));

    tmp_22_fu_1326_p2 <= std_logic_vector(signed(tmp_21_fu_1312_p1) - signed(r_V_23_cast_fu_1322_p1));
    tmp_23_fu_1473_p2 <= std_logic_vector(signed(p_0210_0_i_cast_fu_1469_p1) + signed(tmp_reg_2029));
    tmp_24_fu_1478_p1 <= std_logic_vector(resize(unsigned(ap_reg_pp0_iter11_snr_V_read_reg_1614),64));
    tmp_25_fu_1520_p1 <= std_logic_vector(resize(unsigned(r_V_27_reg_2074),49));
    tmp_26_fu_402_p4 <= chan_real_noise_lfsr(53 downto 47);
    tmp_27_fu_1554_p2 <= "1" when (signed(roundedNoise_V_reg_2084) < signed(ap_const_lv21_1E0001)) else "0";
    tmp_28_fu_1576_p2 <= (icmp12_fu_1549_p2 or tmp_27_fu_1554_p2);
    tmp_29_fu_1228_p2 <= (tmp_78_reg_1809 or ap_reg_pp0_iter2_phitmp6128_i_1_reg_1671);
    tmp_31_fu_484_p4 <= chan_real_noise_lfsr(85 downto 79);
    tmp_32_fu_1232_p2 <= (tmp_87_reg_1819 or ap_reg_pp0_iter2_phitmp6128_i_2_reg_1698);
    tmp_34_fu_566_p4 <= chan_real_noise_lfsr(117 downto 111);
    tmp_35_fu_1236_p2 <= (tmp_96_reg_1829 or ap_reg_pp0_iter2_phitmp6128_i_3_reg_1725);
    tmp_37_fu_636_p4 <= chan_real_noise_lfsr(93 downto 64);
    tmp_54_fu_1364_p3 <= ap_reg_pp0_iter10_p_Val2_s_reg_1619(31 downto 31);
    tmp_55_fu_310_p4 <= chan_real_noise_lfsr(29 downto 22);
    tmp_60_fu_761_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_3_0_1_reg_1633),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_62_fu_904_p3 <= norm_V_load_3_0_2_reg_1740(12 downto 12);
    tmp_66_fu_911_p3 <= norm_V_load_3_0_2_reg_1740(14 downto 14);
    tmp_67_fu_918_p3 <= 
        tmp_62_fu_904_p3 when (icmp2_fu_885_p2(0) = '1') else 
        tmp_66_fu_911_p3;
    tmp_68_fu_940_p1 <= bramChapter_V_load_fu_932_p3(5 - 1 downto 0);
        tmp_69_cast_fu_1499_p1 <= std_logic_vector(resize(signed(tmp_23_reg_2044),31));

    tmp_69_fu_372_p1 <= chan_real_noise_lfsr(10 - 1 downto 0);
    tmp_70_fu_1430_p3 <= ap_reg_pp0_iter11_p_Val2_s_reg_1619(63 downto 63);
    tmp_71_fu_386_p4 <= chan_real_noise_lfsr(61 downto 54);
    tmp_73_fu_788_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_3_1_1_reg_1660),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_75_fu_994_p3 <= norm_V_load_3_1_2_reg_1756(12 downto 12);
    tmp_76_fu_1001_p3 <= norm_V_load_3_1_2_reg_1756(14 downto 14);
    tmp_77_fu_1008_p3 <= 
        tmp_75_fu_994_p3 when (icmp5_fu_975_p2(0) = '1') else 
        tmp_76_fu_1001_p3;
    tmp_78_fu_1030_p1 <= bramChapter_V_load_s_fu_1022_p3(5 - 1 downto 0);
    tmp_79_fu_1403_p3 <= ap_reg_pp0_iter10_p_Val2_s_reg_1619(95 downto 95);
    tmp_80_fu_468_p4 <= chan_real_noise_lfsr(93 downto 86);
    tmp_82_fu_815_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_3_2_1_reg_1687),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_84_fu_1084_p3 <= norm_V_load_3_2_2_reg_1772(12 downto 12);
    tmp_85_fu_1091_p3 <= norm_V_load_3_2_2_reg_1772(14 downto 14);
    tmp_86_fu_1098_p3 <= 
        tmp_84_fu_1084_p3 when (icmp8_fu_1065_p2(0) = '1') else 
        tmp_85_fu_1091_p3;
    tmp_87_fu_1120_p1 <= bramChapter_V_load_2_fu_1112_p3(5 - 1 downto 0);
    tmp_88_fu_1482_p3 <= ap_reg_pp0_iter12_p_Val2_s_reg_1619(127 downto 127);
    tmp_89_fu_550_p4 <= chan_real_noise_lfsr(125 downto 118);
    tmp_91_fu_842_p2 <= std_logic_vector(shift_left(unsigned(norm_V_load_3_3_1_reg_1714),to_integer(unsigned('0' & ap_const_lv15_4(15-1 downto 0)))));
    tmp_93_fu_1174_p3 <= norm_V_load_3_3_2_reg_1788(12 downto 12);
    tmp_94_fu_1181_p3 <= norm_V_load_3_3_2_reg_1788(14 downto 14);
    tmp_95_fu_1188_p3 <= 
        tmp_93_fu_1174_p3 when (icmp11_fu_1155_p2(0) = '1') else 
        tmp_94_fu_1181_p3;
    tmp_96_fu_1210_p1 <= bramChapter_V_load_3_fu_1202_p3(5 - 1 downto 0);
    tmp_99_fu_692_p1 <= chan_real_noise_lfsr(6 - 1 downto 0);
        tmp_cast_fu_1420_p1 <= std_logic_vector(resize(signed(noiseGen_V_load_2_fu_1410_p3),30));

    tmp_fu_1424_p2 <= std_logic_vector(signed(tmp_cast_fu_1420_p1) + signed(p_0202_0_i_cast_fu_1416_p1));
        tmp_s_fu_1495_p1 <= std_logic_vector(resize(signed(noiseGen_V_load_3_fu_1489_p3),31));

end behav;
